{"version":3,"sources":["assets/images/logo.png","assets/images/loading.gif","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","context/LayoutContext.js","components/Sidebar/Sidebar.js","pages/error/styles.js","pages/error/Error.js","pages/UserManage/Admins/styles.js","components/PageTitle/styles.js","components/PageTitle/PageTitle.js","components/Status/styles.js","components/Status/Status.js","components/Loading/BackdropLoading.js","redux/constants/AdminActionType.js","redux/constants/UserActionType.js","redux/constants/UserViewActionType.js","redux/constants/ClientActionType.js","redux/constants/ClientViewActionType.js","redux/constants/CompanyActionType.js","redux/constants/ScheduleActionType.js","redux/constants/ScheduleViewActionType.js","redux/constants/SalesClientActionType.js","redux/constants/SalesClientViewActionType.js","common/config.js","redux/reducers/AdminReducer.js","services/admins/AdminService.js","redux/actions/AdminAction.js","services/auth/Auth.js","context/UserContext.js","pages/UserManage/Admins/Admins.js","components/Widget/styles.js","components/Widget/Widget.js","components/FormControls/styles.js","components/FormControls/CustomInput.js","components/FormControls/CustomCombobox.js","components/Notification/styles.js","components/Notification/Notification.js","services/company/CompanyService.js","redux/actions/CompanyAction.js","pages/UserManage/Admins/EditAdmin.js","pages/UserManage/Admins/AddAdmin.js","pages/UserManage/Users/styles.js","services/users/UserService.js","redux/actions/UserAction.js","pages/UserManage/Users/Users.js","pages/UserManage/Users/EditUser.js","pages/UserManage/Users/AddUser.js","pages/Companys/styles.js","pages/Companys/Companys.js","pages/Companys/AddCompany.js","pages/Companys/EditCompany.js","pages/Client/styles.js","redux/reducers/ClientReducer.js","services/client/ClientService.js","redux/actions/ClientAction.js","pages/Client/Client.js","pages/Client/AddClient.js","pages/Client/EditClient.js","pages/Sales/styles.js","redux/reducers/SalesReducer.js","services/sales/SalesClientService.js","redux/actions/SalesClientAction.js","pages/Sales/Sales.js","pages/Sales/EditSales.js","pages/Sales/AddSales.js","pages/Schedule/styles.js","redux/reducers/ScheduleReducer.js","services/schedule/ScheduleService.js","redux/actions/ScheduleAction.js","pages/Schedule/Schedule.js","components/Footer/styles.js","components/Footer/Footer.js","components/Layout/Layout.js","components/Sidebar/Sidebar1.js","pages/UserView/styles.js","services/users/UserViewService.js","redux/actions/UserViewAction.js","pages/UserView/UserView.js","pages/ScheduleView/styles.js","redux/reducers/ScheduleViewReducer.js","services/scheduleview/ScheduleViewService.js","redux/actions/ScheduleViewAction.js","pages/ScheduleView/ScheduleView.js","pages/ClientView/styles.js","redux/reducers/ClientViewReducer.js","services/clientview/ClientViewService.js","redux/actions/ClientViewAction.js","pages/ClientView/Client.js","pages/ClientView/AddClient.js","pages/ClientView/EditClient.js","pages/SalesView/styles.js","services/salesview/SalesClientViewService.js","redux/actions/SalesClientViewAction.js","pages/SalesView/Sales.js","pages/SalesView/EditSales.js","pages/SalesView/AddSales.js","components/Layout/Layout1.js","pages/success/styles.js","pages/success/success.js","pages/login/styles.js","pages/login/Login.js","components/App.js","serviceWorker.js","redux/fake-datas/UserData.js","redux/reducers/UserReducer.js","redux/reducers/CompanyReducer.js","redux/fake-datas/UserViewData.js","redux/reducers/UserViewReducer.js","redux/reducers/SalesViewReducer.js","redux/reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","themes_default","palette","primary","main","light","tinycolor","lighten","toHexString","dark","darken","white","myprimary","bright","favorite","secondary","contrastText","mysecondary","warning","success","info","text","hint","background","default","blue","green","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","backgroundColor","MuiMenu","paper","boxShadow","MuiSelect","icon","color","MuiListItem","&$selected","&:focus","button","&:hover, &:focus","MuiTouchRipple","child","MuiTable","border","MUIDataTableBodyCell","paddingTop","paddingBottom","MuiTableCell","borderColor","fontSize","head","height","MuiTableRow","MUIDataTableHeadCell","fixedHeaderCommon","MUIDataTableSelectCell","headerCell","MuiTypography","body1","MuiMenuItem","padding","themes","createMuiTheme","Object","objectSpread2","defaultTheme","typography","h1","h2","h3","h4","h5","h6","makeStyles","theme","display","maxWidth","overflowX","content","flexGrow","spacing","width","minHeight","contentShift","concat","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","mainContainer","padding1600","paddingLeft","paddingRight","padding1800","_inputRoot","logotype","defineProperty","marginLeft","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","zIndex","drawer","leavingScreen","hide","grow","search","position","borderRadius","fade","common","black","&:hover","cursor","searchFocused","up","searchIcon","right","alignItems","justifyContent","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","whiteColor","badge","Typography","_ref2","children","weight","size","colorBrightness","props","objectWithoutProperties","useTheme","react_default","a","createElement","assign","style","getColor","getFontWeight","getFontSize","variant","brigtness","arguments","length","undefined","multiplier","defaultSize","Header","classes","useStyles","Grid","container","Toolbar","className","Wrappers_Typography","_mobileBackButton","menuButton","flexShrink","drawerPaper","drawerOpen","drawerClose","sidebarList","mobileBackButton","only","logotypeImage","link","linkActive","linkNestedActive","linkNested","linkIcon","linkIconActive","linkText","largeText","smallText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","listItem","dotBase","dotSmall","dotLarge","Dot","_ref","_classnames","classnames","SidebarLink","_classnames2","_classnames4","_classnames6","label","location","isSidebarOpened","nested","type","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","isLinkActive","pathname","indexOf","Divider","Fragment","ListItem","component","Link","onClick","e","preventDefault","to","disableRipple","ListItemIcon","Inbox","ListItemText","Collapse","in","timeout","unmountOnExit","List","disablePadding","map","childrenLink","key","linkRoot","LayoutStateContext","React","createContext","LayoutDispatchContext","layoutReducer","state","action","Error","LayoutProvider","_React$useReducer","useReducer","_React$useReducer2","dispatch","Provider","value","useLayoutState","context","useContext","useLayoutDispatch","toggleSidebar","structure","id","AccountCircleOutlined","BusinessOutlined","PeopleAltOutlined","TransferWithinAStationOutlined","TimerOutlined","withRouter","_classNames","_classNames2","layoutDispatch","layoutState","isPermanent","setPermanent","useEffect","window","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","classNames","open","IconButton","FormatAlignJustifyOutlined","FormatAlignLeftOutlined","ArrowBack","isSmallScreen","innerWidth","values","md","top","left","logotypeText","logotypeIcon","paperRoot","textRow","textAlign","errorCode","safetyText","backButton","Paper","colorbrightness","Button","dashedBorder","formControl","filePicker","fileInput","selectEmpty","formContainer","typo","buttonContainer","statusTextContainer","statusText","invoiceContainer","backgroundImage","iconContainer","cardTitle","letterSpacing","cardRoot","displayColumn","lineHeight","headerContainer","rightAlign","cardFooterRoot","editButton","printButton","shareButton","actionButton","notificationItem","notificationCloseButton","toastsContainer","progress","visibility","notification","overflow","notificationComponent","pageTitleContainer","&:active","buttonGroup","PageTitle","iconVar","Add_default","Print","CloudUpload_default","CloudDownload_default","buttonCount","lgSpan","mdSpan","smSpan","item","lg","sm","xs","title","includes","startIcon","category","console","log","history","push","buttonHandler","status","draft","paid","Status","toUpperCase","backdrop","BackdropLoading","_React$useState","_React$useState2","setOpen","Backdrop","src","loadingImage","alt","FETCH_ADMIN_REQUEST","FETCH_ADMIN_SUCCESS","FETCH_ADMIN_ERROR","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_ERROR","FETCH_USERVIEW_REQUEST","FETCH_USERVIEW_SUCCESS","FETCH_USERVIEW_ERROR","FETCH_CLIENT_REQUEST","FETCH_CLIENT_SUCCESS","FETCH_CLIENT_ERROR","FETCH_CLIENTVIEW_REQUEST","FETCH_CLIENTVIEW_SUCCESS","FETCH_CLIENTVIEW_ERROR","FETCH_COMPANY_REQUEST","FETCH_COMPANY_SUCCESS","FETCH_COMPANY_ERROR","FETCH_SCHEDULE_REQUEST","FETCH_SCHEDULE_SUCCESS","FETCH_SCHEDULE_ERROR","FETCH_SCHEDULEVIEW_REQUEST","FETCH_SCHEDULEVIEW_SUCCESS","FETCH_SCHEDULEVIEW_ERROR","FETCH_SALESCLIENT_REQUEST","FETCH_SALESCLIENT_SUCCESS","FETCH_SALESCLIENT_ERROR","FETCH_SALESCLIENTVIEW_REQUEST","FETCH_SALESCLIENTVIEW_SUCCESS","FETCH_SALESCLIENTVIEW_ERROR","SERVER_URL","initialState","loading","admin","error","fetchAdmins","body","isAdmin","setTimeout","fetch","method","JSON","stringify","headers","Content-Type","then","res","json","catch","fetchAdminError","loginApi","user","Accept","Promise","resolve","reject","axios","post","err","signUpApi","UserStateContext","UserDispatchContext","adminID","userReducer","isAuthenticated","isSignup","UserProvider","localStorage","getItem","useUserState","connect","bindActionCreators","useHistory","_useState3","_useState4","_useState5","_useState6","dataSource","setDataSource","adminData","useSelector","_useState7","_useState8","columns","name","options","filter","sort","customBodyRender","tableMeta","updateValue","actionEdit","Edit","i","filterType","pagination","print","download","responsive","fixedHeader","elevation","rowsPerPageOptions","resizableColumns","onRowsDelete","rowsDeleted","delete_id","data","newDeleteId","dataIndex","user_id","requestOptions","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","ok","message","abrupt","stop","_x","apply","this","toast","onTableChange","tableState","tmp","dist_default","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","moreButton","Widget","noBodyPadding","bodyClass","disableWidgetMenu","_ref$menuItems","menuItems","header","moreButtonRef","setMoreButtonRef","isMoreMenuOpen","setMoreMenuOpen","aria-owns","aria-haspopup","buttonRef","MoreVert","Menu","anchorEl","onClose","disableAutoFocusItem","menu","index","MenuItem","addButton","comboContainer","addIcon","autoRoot","CustomInput","FormControl","TextField","multiline","rows","required","onChange","handleChange","CustomCombobox","defaultProps","items","getOptionLabel","option","addbtn","Autocomplete","debug","multiple","openOnFocus","renderOption","renderInput","params","req","Tooltip","notificationContainer","notificationContained","notificationContainedShadowless","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","containedTypography","messageContainer","extraButton","typesIcons","e-commerce","ShoppingCart","NotificationsNone","offer","LocalOffer","ThumbUp","Email","feedback","SmsFailed","customer","AccountBox","shipped","Done","delivered","BusinessCenter","defence","esm_Error","report","Report","upload","Publish","disc","DiscFull","Notification","getIconByType","iconWithStyles","cloneElement","notificationIcon","shadowless","setAlpha","toRgbString","typographyVariant","extraButtonClick","fetchCompany","company","fetchCompanyError","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","errorToastId","setErrorToastId","notificationsPosition","companyData","notify","_useState9","full_name","email","phone_number","company_id","isActive","_useState10","setState","update_id","match","getAdminInfo","toString","companies","original","Boolean","objArray2Array","field","prevState","target","checked","_e$target","onSave","test","_callee2","_context2","handleNotificationCall","_x2","updateAdminInfo","react_toastify","closeButton","_ref3","closeToast","Close","closeOnClick","progressClassName","notificationProgress","FormControlLabel","control","Switch","Cancel","Save","retryErrorNotification","update","render","notificationType","componentProps","toastId","sendNotification","password","maxLength","fetchUsers","fetchUserError","selectedRowIndex","setSelectedRowIndex","userData","getUserInfo","updateUserInfo","AddCompany","entity_name","owner_name","address","time_limit_per_schedule","late_policy","min_schedule_time","max_schedule_time","notes","CloseButton","company_entity_name","company_owner_name","getCompanyInfo","updateCompanyInfo","_ref4","table","difference","client","fetchClient","fetchClientError","clientData","client_id","client_entity_name","client_owner_name","getClientInfo","updateClientInfo","fetchSalesClient","sales","fetchSalesClientError","salesData","sales_client_id","client_name","user_name","getSalesClientInfo","clients","optionData","getClientNameList","users","getUserNameList","userList","clientList","handleUserChange","handleClientChange","schedule","ScheduleReducer","fetchSchedule","fetchScheduleError","scheduleData","schedule_id","version","Footer","matches1600","useMediaQuery","matches1800","Sidebar_Sidebar","react_router","exact","path","AdminPage","EditAdminPage","AddAdminPage","UserPage","EditUserPage","AddUserPage","CompanyPage","AddCompanyPage","EditCompanyPage","ClientsPage","AddClientPage","EditClientPage","SalesPage","EditSalesPage","AddSalesPage","SchedulePage","fetchUserView","userview","fetchUserViewError","userviewData","selectableRows","scheduleview","ScheduleViewReducer","fetchScheduleView","fetchScheduleViewError","scheduleviewData","clientview","fetchClientView","fetchClientViewError","clientViewData","fetchSalesClientView","salesview","fetchSalesClientViewError","salesviewData","Sidebar1","UserViewPage","ScheduleViewPage","ClientViewPage","SalesViewPage","Success","_logotypeContainer","logotypeContainer","form","tab","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","&:before","borderBottomColor","&:after","&:hover:before","textField","formButtons","forgetButton","loginLoader","copyright","bottom","userDispatch","useUserDispatch","isLoading","setIsLoading","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","_useState11","_useState12","passwordValue","setPasswordValue","_useState13","_useState14","confirmValue","setConfirmValue","_useState15","_useState16","phoneNumberValue","setPhoneNumberValue","_useState17","_useState18","companyIDValue","setCompanyIDValue","validateEmail","Tabs","indicatorColor","textColor","centered","Tab","Fade","InputProps","underline","input","placeholder","fullWidth","CircularProgress","disabled","login","check_id","isSuperAdmin","setItem","token","rememberToken","loginUser","signUp","App","_useUserState","react_router_dom","PrivateRoute","Layout","Layout1","PublicRoute","Login","rest","from","hostname","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","ThemeProvider","Themes","CssBaseline","useUtils_cfb96ac9","utils","DateFnsUtils","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.342e9837.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.40a2ca7d.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.80a83396.gif\";","import tinycolor from \"tinycolor2\";\n\nconst primary = \"#536DFE\";//#6200ee\nconst secondary = \"#FF5C93\";\nconst myprimary = \"#0B1A2D\"; //0B1A2D 07112C\nconst mysecondary = \"#00A3EE\";\nconst warning = \"#FFC260\";\nconst success = \"#3CD4A0\";\nconst info = \"#9013FE\";\nconst blue = \"#2196f3\";\nconst green = \"#4caf50\";\nconst white = \"#FFF\";\nconst favorite = \"#4302a0\";\n\nconst lightenRate = 7.5;\nconst brightenRate = 15;\nconst darkenRate = 15;\n\nexport default {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    myprimary: {\n      main: myprimary,\n      bright: tinycolor(myprimary)\n        .lighten(brightenRate)\n        .toHexString(),\n      light: tinycolor(myprimary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(myprimary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    favorite: {\n      main: favorite,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n      white: white,\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(secondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    mysecondary: {\n      main: mysecondary,\n      bright: tinycolor(mysecondary)\n        .lighten(brightenRate)\n        .toHexString(),\n      light: tinycolor(mysecondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(mysecondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(warning)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(success)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(info)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    text: {\n      primary: \"#4A4A4A\",\n      secondary: \"#6E6E6E\",\n      hint: \"#B9B9B9\",\n      white: \"#FFF\"\n    },\n    background: {\n      default: \"#F6F7FF\",\n      light: \"#F3F5FF\",\n    },\n    blue: {\n      main: blue,\n      light: tinycolor(blue)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(blue)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    green: {\n      main: green,\n      light: tinycolor(green)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(green)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n  },\n  customShadows: {\n    widget:\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetDark:\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetWide:\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"#4A4A4A1A\",\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: \"#B9B9B9\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#F3F5FF !important\",\n          \"&:focus\": {\n            backgroundColor: \"#F3F5FF\",\n          },\n        },\n      },\n      button: {\n        \"&:hover, &:focus\": {\n          backgroundColor: \"#F3F5FF\",\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: \"white\",\n      },\n    },\n    MuiTable: {\n      root: {\n        border: \"1px solid rgba(224, 224, 224, .5)\",\n      }\n    },\n    MUIDataTableBodyCell: {\n      root: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n        height: 50,\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 75,\n      },\n    },\n    MUIDataTableHeadCell: {\n      fixedHeaderCommon: {\n        backgroundColor: '#00a3ee5c',\n      }\n    },\n    MUIDataTableSelectCell: {\n      headerCell: {\n        backgroundColor: '#00a3ee5c',\n      }\n    },\n    MuiTypography: {\n      body1: {\n        fontSize: '0.8125rem',\n      }\n    },    \n    MuiMenuItem: {\n      root: {\n        fontSize: '0.8125rem',\n        padding: 36,\n        paddingTop: 12,\n        paddingBottom: 12,\n      }\n    },    \n  },\n};\n","import defaultTheme from \"./default\";\n\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst overrides = {\n  typography: {\n    h1: {\n      fontSize: \"3rem\",\n    },\n    h2: {\n      fontSize: \"2rem\",\n    },\n    h3: {\n      fontSize: \"1.64rem\",\n    },\n    h4: {\n      fontSize: \"1.5rem\",\n    },\n    h5: {\n      fontSize: \"1.285rem\",\n    },\n    h6: {\n      fontSize: \"1.142rem\",\n    },\n  },\n};\n\nexport default {\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\n};\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    maxWidth: \"100vw\",\n    overflowX: \"hidden\",\n    background: '#fff',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: `calc(100vw - 240px)`,\n    minHeight: \"100vh\",\n  },\n  contentShift: {\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  fakeToolbar: {\n    ...theme.mixins.toolbar,\n  },\n  mainContainer: {\n    paddingTop: 40,\n    // paddingLeft: 40,\n    // paddingRight: 40,\n    // paddingLeft: `calc(100vw - 240px) * 0.2`,\n  },\n  padding1600: {\n    paddingLeft: 80,\n    paddingRight: 80,\n  },\n  padding1800: {\n    paddingLeft: 120,\n    paddingRight: 120,\n  },\n\n}));\n","import { makeStyles } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport blue from '@material-ui/core/colors/blue';\n\nexport default makeStyles(theme => ({\n  logotype: {\n    color: \"white\",\n    marginLeft: theme.spacing(2.5),\n    marginRight: theme.spacing(2.5),\n    fontWeight: 500,\n    fontSize: 18,\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\",\n    },\n  },\n  appBar: {\n    width: \"100%\",\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    width: \"100%\",\n    // background: \"#6200ee;\",\n    background: theme.palette.mysecondary.main,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    background: \"white\",\n    position: \"relative\",\n    borderRadius: 25,\n    paddingLeft: theme.spacing(2.5),\n    width: 36,\n    backgroundColor: fade(theme.palette.common.black, 0),\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\n    \"&:hover\": {\n      cursor: \"pointer\",\n      // background: \"#FFF\",\n      backgroundColor: fade(theme.palette.common.black, 0.08),\n    },\n  },\n  searchFocused: {\n    backgroundColor: fade(theme.palette.common.black, 0.08),\n    // backgroundColor: fade(theme.palette.common.white, 1),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 250,\n    },\n  },\n  searchIcon: {\n    width: 36,\n    right: 0,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    transition: theme.transitions.create(\"right\"),\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  searchIconOpened: {\n    right: theme.spacing(1.25),\n  },\n  inputRoot: {\n    color: \"#B9B9B9\",\n    color: theme.palette.primary.light,\n    width: \"100%\",\n  },\n  inputInput: {\n    height: 36,\n    padding: 0,\n    paddingRight: 36 + theme.spacing(1.25),\n    width: \"100%\",\n  },\n  messageContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenu: {\n    marginTop: theme.spacing(7),\n  },\n  headerMenuList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenuItem: {\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"white\",\n    },\n  },\n  headerMenuButton: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5),\n  },\n  headerMenuButtonCollapse: {\n    marginRight: theme.spacing(2),\n  },\n  headerIcon: {\n    fontSize: 28,\n    color: \"rgba(255, 255, 255, 0.35)\",\n  },\n  headerIconCollapse: {\n    color: \"white\",\n  },\n  profileMenu: {\n    minWidth: 265,\n  },\n  profileMenuUser: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n  },\n  profileMenuItem: {\n    color: theme.palette.text.hint,\n  },\n  profileMenuIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.text.hint,\n  },\n  profileMenuLink: {\n    fontSize: 16,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  messageNotification: {\n    height: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  messageNotificationSide: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  messageNotificationBodySide: {\n    alignItems: \"flex-start\",\n    marginRight: 0,\n  },\n  sendMessageButton: {\n    margin: theme.spacing(4),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    textTransform: \"none\",\n  },\n  sendButtonIcon: {\n    marginLeft: theme.spacing(2),\n  },\n  whiteColor: {\n    color: \"white\"\n  }\n}));\n","import React from \"react\";\nimport {\n  withStyles,\n  Badge as BadgeBase,\n  Typography as TypographyBase,\n  Button as ButtonBase,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  badge: {\n    fontWeight: 600,\n    height: 16,\n    minWidth: 16,\n  },\n}));\n\nfunction Badge({ children, colorBrightness, color, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n  var Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(color, theme, colorBrightness),\n    },\n  });\n\n  return (\n    <Styled>\n      {styledProps => (\n        <BadgeBase\n          classes={{\n            badge: classnames(classes.badge, styledProps.classes.badge),\n          }}\n          {...props}\n        >\n          {children}\n        </BadgeBase>\n      )}\n    </Styled>\n  );\n}\n\nfunction Typography({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) {\n  var theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n}\n\nfunction Button({ children, color, className, ...props }) {\n  var theme = useTheme();\n\n  var Styled = createStyled({\n    root: {\n      color: getColor(color, theme),\n      width: '100%',\n    },\n    contained: {\n      backgroundColor: getColor(color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\n      \"&:hover\": {\n        backgroundColor: getColor(color, theme, \"light\"),\n        boxShadow: theme.customShadows.widgetWide,\n      },\n      \"&:active\": {\n        boxShadow: theme.customShadows.widgetWide,\n      },\n    },\n    outlined: {\n      color: getColor(color, theme),\n      borderColor: getColor(color, theme),\n    },\n    select: {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  });\n\n  return (\n    <Styled>\n      {({ classes }) => (\n        <ButtonBase\n          classes={{\n            contained: classes.contained,\n            root: classes.root,\n            outlined: classes.outlined,\n          }}\n          {...props}\n          className={classnames(\n            {\n              [classes.select]: props.select,\n            },\n            className,\n          )}\n        >\n          {children}\n        </ButtonBase>\n      )}\n    </Styled>\n  );\n}\n\nexport { Badge, Typography, Button };\n\n// ########################################################################\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n    case \"medium\":\n      return 500;\n    case \"bold\":\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n    case \"md\":\n      multiplier = 1.5;\n      break;\n    case \"xl\":\n      multiplier = 2;\n      break;\n    case \"xxl\":\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize =\n    variant && theme.typography[variant]\n      ? theme.typography[variant].fontSize\n      : theme.typography.fontSize + \"px\";\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nfunction createStyled(styles, options) {\n  var Styled = function(props) {\n    const { children, ...other } = props;\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n}\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link,\n  Grid\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers/Wrappers\";\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  return (\n    <Grid  container spacing={4}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          ASILE\n        </Typography>\n        </Toolbar>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nconst drawerWidth = 240;\n\nexport default makeStyles(theme => ({\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerPaper: {\n    // background: \"#6200ee\",\n    background: theme.palette.myprimary.main,\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n    },\n  },\n  toolbar: {\n    marginTop: 15,\n    color: \"#FFF\",\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: \"center\",\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  sidebarList: {\n    padding: theme.spacing(1),\n  },\n  mobileBackButton: {\n    marginTop: theme.spacing(0.5),\n    marginLeft: theme.spacing(3),\n    [theme.breakpoints.only(\"sm\")]: {\n      marginTop: theme.spacing(0.625),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    width: 40,\n    marginRight: theme.spacing(1),\n  },\n  logotype: {\n    marginRight: theme.spacing(1),\n  }\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\",\n    borderRadius: \"10px\",\n    \"&:hover\": {\n      // backgroundColor: theme.palette.favorite.main + \"55\",\n      backgroundColor: theme.palette.myprimary.light,\n    },\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main\n      backgroundColor: \"inherit\"\n    },\n  },\n  linkActive: {\n    // backgroundColor: theme.palette.favorite.main,\n    backgroundColor: theme.palette.myprimary.bright,\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main\n      backgroundColor: theme.palette.myprimary.bright\n    },\n  },\n  linkNestedActive: {\n    // backgroundColor: theme.palette.favorite.main\n    backgroundColor: theme.palette.myprimary.bright,\n  },\n  linkNested: {\n    paddingLeft: 0,\n    borderRadius: \"10px\",\n    \"&:hover\": {\n      // backgroundColor: theme.palette.favorite.main + \"55\"\n      backgroundColor: theme.palette.myprimary.light\n    },\n    \"&:focus\": {\n      // backgroundColor: theme.palette.favorite.main,\n      backgroundColor: theme.palette.myprimary.bright\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.primary.white,\n  },\n  linkIconActive: {\n    color: theme.palette.primary.white,\n  },\n  linkText: {\n    padding: 0,\n    color: theme.palette.text.white + \"\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 14,\n  },\n  largeText: {\n    fontSize: 14,\n  },\n  smallText: {\n    fontSize: 13,\n  },\n  linkTextActive: {\n    // color: theme.palette.text.primary,\n    color: theme.palette.text.white,\n    fontWeight: \"550\",\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(3),\n    fontSize: '12px!important',\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n  listItem: {\n    padding: 5\n  }\n}));\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  dotBase: {\n    width: 8,\n    height: 8,\n    backgroundColor: theme.palette.text.hint,\n    borderRadius: \"50%\",\n    transition: theme.transitions.create(\"background-color\"),\n  },\n  dotSmall: {\n    width: 5,\n    height: 5\n  },\n  dotLarge: {\n    width: 11,\n    height: 11,\n  },\n}));\n\nexport default function Dot({ size, color }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classnames(classes.dotBase, {\n        [classes.dotLarge]: size === \"large\",\n        [classes.dotSmall]: size === \"small\",\n      })}\n      style={{\n        backgroundColor:\n          color && theme.palette[color] && theme.palette[color].main,\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n            [classes.linkNestedActive]: isLinkActive && nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n              [classes.largeText]: !nested,\n              [classes.smallText]: nested,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding className={classes.listItem}>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","import React from \"react\";\n\nvar LayoutStateContext = React.createContext();\nvar LayoutDispatchContext = React.createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SIDEBAR\":\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction LayoutProvider({ children }) {\n  var [state, dispatch] = React.useReducer(layoutReducer, {\n    isSidebarOpened: true,\n  });\n  return (\n    <LayoutStateContext.Provider value={state}>\n      <LayoutDispatchContext.Provider value={dispatch}>\n        {children}\n      </LayoutDispatchContext.Provider>\n    </LayoutStateContext.Provider>\n  );\n}\n\nfunction useLayoutState() {\n  var context = React.useContext(LayoutStateContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = React.useContext(LayoutDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\n\n// ###########################################################\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: \"TOGGLE_SIDEBAR\",\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  MenuOpen, LocalAtmOutlined, ShoppingCartOutlined,\n  AccountBalanceOutlined, AssessmentOutlined,\n  FormatAlignJustifyOutlined, FormatAlignLeftOutlined, People, Settings, AccountCircleOutlined, BusinessOutlined, PeopleAltOutlined, TransferWithinAStationOutlined, TimerOutlined\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n//logo\nimport logo from \"../../assets/images/logo.png\";\n// import biglogo from \"../../assets/images/biglogo.jpg\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst structure = [\n  {\n    id: 0,\n    label: \"User\",\n    link: \"/app/usermanage\",\n    icon: <AccountCircleOutlined fontSize=\"small\"/>,\n    children: [\n      { label: \"Administrators\", link: \"/app/usermanage/admin\" },\n      { label: \"Users\", link: \"/app/usermanage/user\" },\n    ],\n  },\n  {\n    id: 1,\n    label: \"Company\",\n    link: \"/app/company\",\n    icon: <BusinessOutlined fontSize=\"small\"/>,\n  },\n  {\n    id: 2,\n    label: \"Client\",\n    link: \"/app/client\",\n    icon: <PeopleAltOutlined fontSize=\"small\"/>,\n    \n  },\n  {\n    id: 3,\n    label: \"Sales Client\",\n    link: \"/app/sales\",\n    icon: <TransferWithinAStationOutlined fontSize=\"small\"/>,\n  },\n  {\n    id: 4,\n    label: \"Schedule\",\n    link: \"/app/schedule\",\n    icon: <TimerOutlined fontSize=\"small\"/>,\n  },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // global\n  var layoutState = useLayoutState();\n  // var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames(classes.drawerPaper, {\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar}>\n        {/* <img src={layoutState.isSidebarOpened ? biglogo : logo} alt=\"D\" className={layoutState.isSidebarOpened ? classes.biglogotypeImage : classes.logotypeImage} /> */}\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButton,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <FormatAlignJustifyOutlined\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n              <FormatAlignLeftOutlined\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            )}\n        </IconButton>\n      </div>\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            style={{color:'white'}}\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: \"white\",\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: \"center\",\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"../../assets/images/logo.png\";\n\nexport default function Error() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      {/* <div className={classes.logotype}>\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\n          Diago Admin\n        </Typography>\n      </div> */}\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h1\"\n          color=\"primary\"\n          className={classnames(classes.textRow, classes.errorCode)}\n        >\n          404\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Oops. Looks like the page you're looking for no longer exists\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          color=\"text\"\n          colorbrightness=\"secondary\"\n          className={classnames(classes.textRow, classes.safetyText)}\n        >\n          But we're here to bring you back to safety\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Back to Home\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  pageTitleContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(5),\n  },\n  typo: {\n    color: theme.palette.text.hint,\n  },\n  button: {\n    padding: '8px 8px',\n    fontSize: 12,\n    width: '100%',\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    \"&:active\": {\n      boxShadow: theme.customShadows.widgetWide,\n    },\n  },\n  buttonContainer: {\n    padding: 5,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: 'max-content',\n  },\n  buttonGroup: {\n    display: \"flex\",\n    justifyContent: 'flex-end',\n    padding: \"5px 0 5px 0\"\n  }\n}));\n","import React from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\nimport { Print } from \"@material-ui/icons\";\n\nexport default function PageTitle(props) {\n  var classes = useStyles();\n\n  const iconVar = [];\n  iconVar[\"Add New\"] = <AddIcon />\n  iconVar[\"Add Income\"] = <AddIcon />\n  iconVar[\"Add Expense\"] = <AddIcon />\n  iconVar[\"Print\"] = <Print />\n  iconVar[\"Import\"] = <CloudUploadIcon />\n  iconVar[\"Export\"] = <CloudDownloadIcon />\n\n  let buttonCount = 1;\n  let lgSpan = [0];\n  let mdSpan = [0];\n  let smSpan = [0];\n  if (props.button) {\n    buttonCount = props.button.length;\n    lgSpan = [2, 4, 4, 6]\n    mdSpan = [4, 6, 6, 8]\n    smSpan = [4, 4, 8, 12]\n  }\n\n  const buttonHandler = (e, item, category) => {\n    console.log(e, item, category);\n    switch (category) {\n      case 'admin':\n        if (item === 'Add New') {\n          props.history.push(\"/app/usermanage/admin/add\");\n        }\n        break;\n      case 'user':\n        if (item === 'Add New') {\n          props.history.push(\"/app/usermanage/user/add\");\n        }\n        break;\n      case 'company':\n        if (item === 'Add New') {\n          props.history.push(\"/app/company/add\");\n        }\n        break;\n      case 'client':\n        if (item === 'Add New') {\n          props.history.push(\"/app/client/add\");\n        }\n        break;\n      case 'sales':\n        if (item === 'Add New') {\n          props.history.push(\"/app/sales/add\");\n        }\n        break;\n      case 'salesview':\n        if (item === 'Add New') {\n          props.history.push(\"/app/salesview/add\");\n        }\n        break;\n      case 'clientview':\n        if (item === 'Add New') {\n          props.history.push(\"/app/clientview/add\");\n        }\n        break;\n      default:\n        console.log();\n    }\n  }\n\n  return (\n    <div className={classes.pageTitleContainer}>\n      <Grid container spacing={1} >\n        <Grid item\n          lg={12 - lgSpan[buttonCount - 1]}\n          md={12 - mdSpan[buttonCount - 1]}\n          sm={smSpan[buttonCount - 1] === 12 ? 12 : 12 - smSpan[buttonCount - 1]}\n          xs={12}>\n          <Typography className={classes.typo} variant=\"h2\" size=\"sm\" color=\"myprimary\" weight=\"bold\">\n            {props.title}\n          </Typography>\n        </Grid>\n        {props.button && (\n          <Grid item lg={lgSpan[buttonCount - 1]} md={mdSpan[buttonCount - 1]} sm={smSpan[buttonCount - 1]} xs={12}>\n            <Grid container className={classes.buttonGroup}>\n              {\n                props.button.length > 0 && props.button.map((item, key) => (\n                  <Grid key={key} item className={classes.buttonContainer} lg={12 / buttonCount} md={12 / buttonCount} sm={12 / buttonCount} xs={12}>\n                    <Button\n                      variant={!item.includes(\"Add\") ? \"outlined\" : \"contained\"}\n                      classes={{ root: classes.button }}\n                      size=\"large\"\n                      color=\"primary\"\n                      startIcon={iconVar[item]}\n                      onClick={(e) => buttonHandler(e, item, props.category)}\n                    >\n                      {item}\n                    </Button>\n                  </Grid>\n                ))\n              }\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n  status: {\n    width: 50,\n    height: 24,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 50,\n    fontSize: 10,\n    color: \"#FFF\"\n  },\n  draft: {\n    backgroundColor: theme.palette.primary.main\n  },\n  paid: {\n    backgroundColor: theme.palette.success.main\n  }\n}));\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nexport default function Status({ color = \"primary\", ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classNames(classes.status, {[classes.draft]: props.status === 'yes',[classes.paid]: props.status === 'no'}, )}\n    >\n        {props.status.toUpperCase()}\n    </div>\n  );\n}\n","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport loadingImage from '../../assets/images/loading.gif';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 5,\r\n    color: '#fff',\r\n    backgroundColor: '#ffffff44',\r\n  },\r\n}));\r\n\r\nexport default function BackdropLoading(props) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Backdrop className={classes.backdrop} open={props.open} onClick={handleClose}>\r\n        <img src={loadingImage} alt=\"Loading ...\"/>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","export const FETCH_ADMIN_REQUEST = 'FETCH_ADMIN_REQUEST';\r\nexport const FETCH_ADMIN_SUCCESS = 'FETCH_ADMIN_SUCCESS';\r\nexport const FETCH_ADMIN_ERROR = 'FETCH_ADMIN_ERROR';","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';","export const FETCH_USERVIEW_REQUEST = 'FETCH_USERVIEW_REQUEST';\r\nexport const FETCH_USERVIEW_SUCCESS = 'FETCH_USERVIEW_SUCCESS';\r\nexport const FETCH_USERVIEW_ERROR = 'FETCH_USERVIEW_ERROR';","export const FETCH_CLIENT_REQUEST = 'FETCH_CLIENT_REQUEST';\r\nexport const FETCH_CLIENT_SUCCESS = 'FETCH_CLIENT_SUCCESS';\r\nexport const FETCH_CLIENT_ERROR = 'FETCH_CLIENT_ERROR';","export const FETCH_CLIENTVIEW_REQUEST = 'FETCH_CLIENTVIEW_REQUEST';\r\nexport const FETCH_CLIENTVIEW_SUCCESS = 'FETCH_CLIENTVIEW_SUCCESS';\r\nexport const FETCH_CLIENTVIEW_ERROR = 'FETCH_CLIENTVIEW_ERROR';","export const FETCH_COMPANY_REQUEST = 'FETCH_COMPANY_REQUEST';\r\nexport const FETCH_COMPANY_SUCCESS = 'FETCH_COMPANY_SUCCESS';\r\nexport const FETCH_COMPANY_ERROR = 'FETCH_COMPANY_ERROR';","export const FETCH_SCHEDULE_REQUEST = 'FETCH_SCHEDULE_REQUEST';\r\nexport const FETCH_SCHEDULE_SUCCESS = 'FETCH_SCHEDULE_SUCCESS';\r\nexport const FETCH_SCHEDULE_ERROR = 'FETCH_SCHEDULE_ERROR';","export const FETCH_SCHEDULEVIEW_REQUEST = 'FETCH_SCHEDULEVIEW_REQUEST';\r\nexport const FETCH_SCHEDULEVIEW_SUCCESS = 'FETCH_SCHEDULEVIEW_SUCCESS';\r\nexport const FETCH_SCHEDULEVIEW_ERROR = 'FETCH_SCHEDULEVIEW_ERROR';","export const FETCH_SALESCLIENT_REQUEST = 'FETCH_SALESCLIENT_REQUEST';\r\nexport const FETCH_SALESCLIENT_SUCCESS = 'FETCH_SALESCLIENT_SUCCESS';\r\nexport const FETCH_SALESCLIENT_ERROR = 'FETCH_SALESCLIENT_ERROR';","export const FETCH_SALESCLIENTVIEW_REQUEST = 'FETCH_SALESCLIENTVIEW_REQUEST';\r\nexport const FETCH_SALESCLIENTVIEW_SUCCESS = 'FETCH_SALESCLIENTVIEW_SUCCESS';\r\nexport const FETCH_SALESCLIENTVIEW_ERROR = 'FETCH_SALESCLIENTVIEW_ERROR';","// export const SERVER_URL = \"http://localhost:4000/\";\r\nexport const SERVER_URL = \"http://admin-page.asile.id/\";\r\nexport const GOOGLE_MAP_API_KEY = \"AIzaSyDJe5pWyxzTkHoBFRdwJ1-6UcZ_DJZZ2dQ\"","import {data} from \"../fake-datas/AdminData\"\r\nimport { FETCH_ADMIN_REQUEST, FETCH_ADMIN_SUCCESS, FETCH_ADMIN_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    admin: [],\r\n    error: null\r\n}\r\n\r\nexport default function AdminReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_ADMIN_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_ADMIN_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // admin: [...data]\r\n                admin: action.admin\r\n            }\r\n        case FETCH_ADMIN_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { fetchAdminRequest, fetchAdminSuccess, fetchAdminError } from \"../../redux/actions/AdminAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport AdminReducer from \"../../redux/reducers/AdminReducer\";\r\n\r\nfunction fetchAdmins() {\r\n    return dispatch => {\r\n        dispatch(fetchAdminRequest());\r\n        const body = { isAdmin: 1 };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUser`, {\r\n                method: 'POST',\r\n                body:JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchAdminSuccess(res));\r\n                console.log(\"Get Admin===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchAdminError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchAdmins;","import {\r\n  FETCH_ADMIN_REQUEST,\r\n  FETCH_ADMIN_SUCCESS,\r\n  FETCH_ADMIN_ERROR\r\n} from '../constants'\r\n  export const getAdmins = () => {\r\n    return (dispatch, getState) => {\r\n/*       navigator.geolocation.getCurrentPosition((position) => {\r\n        var lat = parseFloat(position.coords.latitude)\r\n        var long = parseFloat(position.coords.longitude)\r\n  \r\n        var initialRegion = {\r\n          latitude: lat,\r\n          longitude: long,\r\n          latitudeDelta: LATITUDE_DELTA,\r\n          longitudeDelta: LONGITUDE_DELTA,\r\n        }\r\n        dispatch({ type: GET_USER_LOCATION, currentResion: initialRegion });\r\n      },\r\n        (error) => alert(JSON.stringify(error)),\r\n        { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }); */\r\n    };\r\n  };\r\n  \r\n  // action.js\r\n\r\nexport function fetchAdminRequest() {\r\n    return {\r\n        type: FETCH_ADMIN_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchAdminSuccess(admin) {\r\n  console.log(\"action===>\", admin)\r\n    return {\r\n        type: FETCH_ADMIN_SUCCESS,\r\n        admin: admin\r\n    }\r\n}\r\n\r\nexport function fetchAdminError(error) {\r\n    return {\r\n        type: FETCH_ADMIN_ERROR,\r\n        error: error\r\n    }\r\n}","import axios from \"axios\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nexport const loginApi = (user) => {\r\n    // axios.defaults.baseURL = 'https://api.example.com';\r\n    // axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\n    // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    let headers = {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n        /* 'mode': 'no-cors',\r\n        'Cache-Control': 'no-cache',\r\n        'Access-Control-Allow-Origin': '*', */\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${SERVER_URL}login`, user, {\r\n            headers: headers,\r\n        }).then(res => {\r\n            console.log(\"login response ===> \", res);\r\n            resolve(res);\r\n        })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}\r\n\r\nexport const signUpApi = (user) => {\r\n    // axios.defaults.baseURL = 'https://api.example.com';\r\n    // axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\n    // axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    let headers = {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n        /* 'mode': 'no-cors',\r\n        'Cache-Control': 'no-cache',\r\n        'Access-Control-Allow-Origin': '*', */\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${SERVER_URL}signup`, user, {\r\n            headers: headers,\r\n        }).then(res => {\r\n            resolve(res);\r\n        })\r\n            .catch(err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}","import React from \"react\";\nimport { loginApi, signUpApi } from \"../services/auth/Auth\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\nvar adminID = 0;\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return { ...state, loading: true, isAuthenticated: true };\n    case \"LOGIN_SUCCESS\":\n      return { ...state, loading: false, isAuthenticated: true, adminID: adminID };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state, loading: false, isAuthenticated: 0 };\n    case \"LOGIN_FAILURE\":\n      return { ...state, loading: false, isAuthenticated: 0 };\n    case \"SIGNUP_REQUEST\":\n      return { ...state, loading: true, isSignup: true };\n    case \"SIGNUP_SUCCESS\":\n      return { ...state, loading: false, isSignup: state.isSignup };\n    case \"SIGNUP_FAILURE\":\n      return { ...state, loading: false, isSignup: 0 };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\n    adminID: localStorage.getItem(\"id_token\")\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signUp, signOut };\n\n// ###########################################################\n\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  dispatch({ type: 'LOGIN_REQUEST', history: history });\n\n  // auth api\n  loginApi({ email: login, password: password }).then(res => {\n    if (res.data.user_id == null || res.data.user_id == undefined) {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n      history.push('/login');\n    }\n    setTimeout(() => {\n      let check_id = res.data.isSuperAdmin;\n      if (check_id == 1) {\n        localStorage.setItem('id_token', 1)\n        adminID = 1\n        setError(true)\n        setIsLoading(false)\n        dispatch({ type: 'LOGIN_SUCCESS', token: res.data.rememberToken })\n\n        history.push('/app')\n      } else if (check_id == 0) {\n        localStorage.setItem('id_token', 2)\n        localStorage.setItem('company_id', res.data.company_id)\n        adminID = 2\n        setError(null)\n        setIsLoading(false)\n        dispatch({ type: 'LOGIN_SUCCESS' })\n\n        history.push('/app')\n      } else {\n        history.push('/login');\n      }\n    }, 1000);\n  }).catch(err => {\n    setTimeout(() => {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n      history.push('/login')\n      setError(err);\n      setIsLoading(false);\n    }, 3000);\n  })\n\n}\n\nfunction signUp(dispatch, full_name, password, email, phone_number, company_id, isAdmin, isActive, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  dispatch({ type: 'SIGNUP_REQUEST', history: history });\n\n  // auth api\n  signUpApi({ full_name: full_name, password: password, email: email, phone_number: phone_number, company_id: company_id, isAdmin: isAdmin, isActive: isActive }).then(res => {\n    if (res.data.user_id != null) {\n      setError(\"This user is already exist!\\n Please use another email.\")\n      history.push('/login');\n    } else if (res.data == null) {\n      setError(\"The company id is not exist.\")\n      history.push('/login');\n    } else {\n      setTimeout(() => {\n        setError(true)\n        setIsLoading(false)\n        dispatch({ type: 'SIGNUP_SUCCESS' })\n        history.push('/success')\n      }, 2000);\n    }\n  }).catch(err => {\n    dispatch({ type: \"SIGNUP_FAILURE\" });\n    history.push('/login')\n    setError(err);\n    setIsLoading(false);\n  })\n\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport Status from \"../../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchAdmins from \"../../../services/admins/AdminService\";\nimport { useUserState } from \"../../../context/UserContext\";\nimport { Edit } from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\nfunction AdminPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const adminData = useSelector(state => state.admin);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let admin = useUserState();\n\n  useEffect(() => {\n    props.fetchAdmins();// call backend\n    console.log(\"Admin Data === > \", adminData);\n    setDataSource(adminData.admin);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n        // customBodyRender: (value, tableMeta, updateValue) => {\n        //   return (\n        //     <Status status={value ? \"paid\" : \"draft\"} />\n        //   );\n        // }\n      },\n    },\n    {\n      name: \"isActive\",\n      label: \"Active\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"user_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  console.log(\"Edit Event===> \", value)\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  //Edit admin\n  const actionEdit = (e, i) => {\n    history.push(\"/app/usermanage/admin/\" + i + \"/edit\");\n\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = adminData.admin[data.dataIndex].user_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteUser`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    /* onRowClick: (row, meta) => {\n      onRowClick(row, meta)\n    },\n    onRowsSelect: (cur, all) => {\n      onRowSelect(cur, all)\n    },\n */\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Administrators\" button={[\"Add New\"]} data={dataSource} category=\"admin\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          {/* <MuiThemeProvider theme={getMuiTheme()}> */}\n          <MUIDataTable\n            title={\"Administrators\"}\n            // data={dataSource}\n            data={adminData.admin}\n            columns={columns}\n            options={options}\n          />\n          {/* </MuiThemeProvider> */}\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open} />\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchAdmins: fetchAdmins\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Widget({\n  children,\n  title,\n  noBodyPadding,\n  bodyClass,\n  disableWidgetMenu,\n  menuItems = [],\n  header,\n  ...props\n}) {\n  var classes = useStyles();\n\n  // local\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\n\n  return (\n    <div className={classes.widgetWrapper}>\n      <Paper className={classes.paper} classes={{ root: classes.widgetRoot }}>\n        <div className={classes.widgetHeader}>\n          {header ? (\n            header\n          ) : (\n              <React.Fragment>\n                <Typography variant=\"h5\" color=\"textSecondary\">\n                  {title}\n                </Typography>\n                {!disableWidgetMenu && (\n                  <IconButton\n                    color=\"primary\"\n                    classes={{ root: classes.moreButton }}\n                    aria-owns=\"widget-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={() => setMoreMenuOpen(true)}\n                    buttonRef={setMoreButtonRef}\n                  >\n                    <MoreIcon />\n                  </IconButton>\n                )}\n              </React.Fragment>\n            )}\n        </div>\n        <div\n          className={classnames(classes.widgetBody, {\n            [classes.noPadding]: noBodyPadding,\n            [bodyClass]: bodyClass,\n          })}\n        >\n          {children}\n        </div>\n      </Paper>\n      <Menu\n        id=\"widget-menu\"\n        open={isMoreMenuOpen}\n        anchorEl={moreButtonRef}\n        onClose={() => setMoreMenuOpen(false)}\n        disableAutoFocusItem\n      >\n        {\n          menuItems.map((menu, index) => (\n            <MenuItem key={index}>\n              <Typography>{menu}</Typography>\n            </MenuItem>\n          ))\n        }\n        {/* <MenuItem>\n          <Typography>Edit</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Copy</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Delete</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Print</Typography>\n        </MenuItem> */}\n      </Menu>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { red, blue} from \"@material-ui/core/colors\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles(theme => ({\r\n\r\n    /**\r\n     * EditInvoice.js\r\n     */\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formContainer: {\r\n      padding: \"0 15px 0 15px\"\r\n    },\r\n    addButton: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    /**\r\n     * Custom Combobox\r\n     */\r\n    comboContainer: {\r\n      marginLeft: theme.spacing(1),\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    addIcon: {\r\n      marginLeft: \"5px\"\r\n    },\r\n    autoRoot: {\r\n      marginTop: \"-8px\",\r\n      marginBottom: 0,\r\n    },\r\n    //Custom Combobox End\r\n}));\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { TextField, FormControl } from \"@material-ui/core\";\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomInput(props) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <TextField\r\n                // error\r\n                multiline={props.multiline}\r\n                rows={4}\r\n                required\r\n                label={props.title}\r\n                // defaultValue=\"Hello World\"\\\r\n                type={props.type}\r\n                value={props.value}\r\n                // helperText=\"Incorrect entry.\"\r\n                onChange={(e) => props.handleChange(e)}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { FormControl, InputLabel, Select, MenuItem, Button, Divider, TextField, Grid, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n/**\r\n * \r\n * @param {\r\n * \r\n * require * value * items\r\n * handleChange, addItem\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function CustomCombobox({ required = false, ...props }) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    const defaultProps = {\r\n        options: props.items,\r\n        getOptionLabel: (option) => option,\r\n    };\r\n    return (\r\n        <Grid container className={classes.comboContainer}>\r\n            <Grid item md={props.addbtn ? 10 : 12}>\r\n                <Autocomplete\r\n                    classes={{root: classes.autoRoot}}\r\n                    {...defaultProps}\r\n                    id={props.name}\r\n                    debug={false}\r\n                    multiple={false}\r\n                    openOnFocus={true}\r\n                    value={props.value}\r\n                    renderOption={(option) => option}\r\n                    onChange={(e, value) => { console.log(e, value); props.handleChange(value) }}\r\n                    renderInput={(params) => <TextField {...params} required={props.req} label={props.name} margin=\"normal\" />}\r\n                />\r\n            </Grid>\r\n            {props.addbtn ? <Grid item md={2}>\r\n                <Tooltip title=\"Add Item\">\r\n                    <IconButton className={classes.addIcon}>\r\n                        <AddIcon></AddIcon>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n                : null}\r\n        </Grid>\r\n    );\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  notificationContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  notificationContained: {\n    borderRadius: 45,\n    height: 45,\n    boxShadow: theme.customShadows.widgetDark,\n  },\n  notificationContainedShadowless: {\n    boxShadow: \"none\",\n  },\n  notificationIconContainer: {\n    minWidth: 45,\n    height: 45,\n    borderRadius: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 24,\n  },\n  notificationIconContainerContained: {\n    fontSize: 18,\n    color: \"#FFFFFF80\",\n  },\n  notificationIconContainerRounded: {\n    marginRight: theme.spacing(2),\n  },\n  containedTypography: {\n    color: \"white\",\n  },\n  messageContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexGrow: 1,\n  },\n  extraButton: {\n    color: \"white\",\n    \"&:hover, &:focus\": {\n      background: \"transparent\",\n    },\n  },\n}));\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  NotificationsNone as NotificationsIcon,\n  ThumbUp as ThumbUpIcon,\n  ShoppingCart as ShoppingCartIcon,\n  LocalOffer as TicketIcon,\n  BusinessCenter as DeliveredIcon,\n  SmsFailed as FeedbackIcon,\n  DiscFull as DiscIcon,\n  Email as MessageIcon,\n  Report as ReportIcon,\n  Error as DefenceIcon,\n  AccountBox as CustomerIcon,\n  Done as ShippedIcon,\n  Publish as UploadIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nconst typesIcons = {\n  \"e-commerce\": <ShoppingCartIcon />,\n  notification: <NotificationsIcon />,\n  offer: <TicketIcon />,\n  info: <ThumbUpIcon />,\n  message: <MessageIcon />,\n  feedback: <FeedbackIcon />,\n  customer: <CustomerIcon />,\n  shipped: <ShippedIcon />,\n  delivered: <DeliveredIcon />,\n  defence: <DefenceIcon />,\n  report: <ReportIcon />,\n  upload: <UploadIcon />,\n  disc: <DiscIcon />,\n};\n\nexport default function Notification({ variant, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon,\n    },\n    style: {\n      color:\n        variant !== \"contained\" &&\n        theme.palette[props.color] &&\n        theme.palette[props.color].main,\n    },\n  });\n\n  return (\n    <div\n      className={classnames(classes.notificationContainer, props.className, {\n        [classes.notificationContained]: variant === \"contained\",\n        [classes.notificationContainedShadowless]: props.shadowless,\n      })}\n      style={{\n        backgroundColor:\n          variant === \"contained\" &&\n          theme.palette[props.color] &&\n          theme.palette[props.color].main,\n      }}\n    >\n      <div\n        className={classnames(classes.notificationIconContainer, {\n          [classes.notificationIconContainerContained]: variant === \"contained\",\n          [classes.notificationIconContainerRounded]: variant === \"rounded\",\n        })}\n        style={{\n          backgroundColor:\n            variant === \"rounded\" &&\n            theme.palette[props.color] &&\n            tinycolor(theme.palette[props.color].main)\n              .setAlpha(0.15)\n              .toRgbString(),\n        }}\n      >\n        {iconWithStyles}\n      </div>\n      <div className={classes.messageContainer}>\n        <Typography\n          className={classnames({\n            [classes.containedTypography]: variant === \"contained\",\n          })}\n          variant={props.typographyVariant}\n          size={variant !== \"contained\" && !props.typographyVariant && \"md\"}\n        >\n          {props.message}\n        </Typography>\n        {props.extraButton && props.extraButtonClick && (\n          <Button\n            onClick={props.extraButtonClick}\n            disableRipple\n            className={classes.extraButton}\n          >\n            {props.extraButton}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// ####################################################################\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}\n","import { fetchCompanyRequest, fetchCompanySuccess, fetchCompanyError } from \"../../redux/actions/CompanyAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchCompany() {\r\n    console.log('fetching Company ...')\r\n    return dispatch => {\r\n        dispatch(fetchCompanyRequest());\r\n        \r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getCompany`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchCompanySuccess(res));\r\n                console.log(\"Get Company===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchCompanyError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchCompany;","import {\r\n    FETCH_COMPANY_REQUEST,\r\n    FETCH_COMPANY_SUCCESS,\r\n    FETCH_COMPANY_ERROR\r\n  } from '../constants'\r\n    export const getCompany = () => {\r\n      return (dispatch, getState) => {\r\n  /*       navigator.geolocation.getCurrentPosition((position) => {\r\n          var lat = parseFloat(position.coords.latitude)\r\n          var long = parseFloat(position.coords.longitude)\r\n    \r\n          var initialRegion = {\r\n            latitude: lat,\r\n            longitude: long,\r\n            latitudeDelta: LATITUDE_DELTA,\r\n            longitudeDelta: LONGITUDE_DELTA,\r\n          }\r\n          dispatch({ type: GET_USER_LOCATION, currentResion: initialRegion });\r\n        },\r\n          (error) => alert(JSON.stringify(error)),\r\n          { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }); */\r\n      };\r\n    };\r\n    \r\n    // action.js\r\n  \r\n  export function fetchCompanyRequest() {\r\n      return {\r\n          type: FETCH_COMPANY_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchCompanySuccess(company) {\r\n      return {\r\n          type: FETCH_COMPANY_SUCCESS,\r\n          company: company\r\n      }\r\n  }\r\n  \r\n  export function fetchCompanyError(error) {\r\n      return {\r\n          type: FETCH_COMPANY_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, Switch, FormControlLabel, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../common/config';\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditAdmin(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const adminData = useSelector(state => state.admin);\n  const [errorToastId, setErrorToastId] = useState(null);\n  const [dataSource, setDataSource] = useState([]);\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n  const companyData = useSelector(state => state.company);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  // input form datas\n  const [state, setState] = useState({\n    full_name: '',\n    email: \"\",\n    phone_number: '',\n    company_id: '',\n    isActive: false\n  })\n\n  const update_id = props.match.params.admin\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n    getAdminInfo(update_id)\n\n  }, [])\n\n  const getAdminInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id\n      })\n    };\n    fetch(`${SERVER_URL}getUserInfoById`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        setState(() => ({\n          ...state,\n          full_name: data[0].full_name,\n          email: data[0].email,\n          phone_number: data[0].phone_number,\n          company_id: data[0].company_id.toString(),\n          isActive: data[0].isActive\n        }))\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      });\n  }\n\n  const updateAdminInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id,\n        full_name: state.full_name,\n        email: state.email,\n        phone_number: state.phone_number,\n        company_id: state.company_id,\n        isAdmin: true,\n        isActive: state.isActive\n      })\n    };\n    fetch(`${SERVER_URL}updateUser`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        handleNotificationCall(\"shipped\");\n      })\n      .catch(error => {\n        handleNotificationCall(\"error\");\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    console.log('originall ====> ', original, companyData.company)\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        original.map(item => {\n          tmp.push(item?.company_id.toString());\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const companies = objArray2Array(companyData.company)\n\n  //input fields event\n  const handleChange = (e, field) => {\n    let comboFields = ['company_id'];\n    if (comboFields.includes(field)) {\n      setState(prevState => ({\n        ...prevState, [field]: e\n      }))\n    } else if (e.target.name == 'isActive') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else {\n      const { name, value } = e.target;\n      setState(prevState => ({\n        ...prevState, [field]: value\n      }))\n    }\n  }\n\n\n  const onSave = () => {\n    if (state.full_name == null || state.full_name == \"\") {\n      notify(\"Please enter name.\")\n      return\n    } else if (state.email.length < 3 || validateEmail(state.email) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\n      notify('Please enter valid phone number')\n      return\n    } else if (state.company_id.length < 1) {\n      notify(\"Please enter company id.\")\n      return\n    } else {\n      updateAdminInfo(update_id)\n    }\n  }\n\n  const onCancel = () => {\n    history.push(\"/app/usermanage/admin\");\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Edit Admin\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={12}>\n          <Widget title=\"\" disableWidgetMenu>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\n                  handleChange={(e) => handleChange(e, 'full_name')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Email\" value={state.email} handleChange={(e) => handleChange(e, 'email')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomCombobox req={true} addbtn={false} name=\"Company ID\" items={companies} value={state.company_id}\n                  handleChange={(e) => handleChange(e, 'company_id')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Activate</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.isActive} onChange={handleChange} name=\"isActive\" />}\n                    label=\"Active\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={8} md={8} lg={8}></Grid>\n              <Grid item xs={4} md={4} lg={4}>\n                <Grid container spacing={2} className={classes.buttonContainer}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.button}\n                      startIcon={<Icons.Cancel />}\n                      onClick={() => onCancel()}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<Icons.Save />}\n                      onClick={() => onSave()}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  /**\n   * Notification Bar Functions\n   * @param {*} componentProps \n   * @param {*} options \n   */\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Something went wrong!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was successfully saved!\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n  // #############################################################\n  function CloseButton({ closeToast, className }) {\n    return <Icons.Close className={className} onClick={closeToast} />;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditAdmin);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SERVER_URL } from '../../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddAdmin(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n    console.log(\"Add Admin get companys ====> \", companyData.company)\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_id.toString());\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        full_name: '',\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_number: '',\r\n        company_id: \"\",\r\n    })\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_id'];\r\n        if (comboFields.includes(field)) {\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_id.length < 1) {\r\n            notify(\"Please enter company id.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.company_id,\r\n                    isAdmin: true,\r\n                    isActive: false\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        \r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/usermanage/admin\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Admin\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\r\n                                    handleChange={(e) => handleChange(e, 'full_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Email\" value={state.email}\r\n                                    handleChange={(e) => handleChange(e, 'email')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Password\" value={state.password}\r\n                                    handleChange={(e) => handleChange(e, 'password')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\" maxLength={10}\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} addbtn={false} name=\"Company ID\" items={companies} value={state.company_id}\r\n                                    handleChange={(e) => handleChange(e, 'company_id')} />\r\n                                {/* <CustomInput title=\"Company ID\" value={state.company_id} handleChange={(e) => handleChange(e, 'company_id')} /> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddAdmin);\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchUserRequest, fetchUserSuccess, fetchUserError } from \"../../redux/actions/UserAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchUsers() {\r\n    console.log('fetching Users ...')\r\n    return dispatch => {\r\n        dispatch(fetchUserRequest());\r\n        const body = { isAdmin: 0 };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUser`, {\r\n                method: 'POST',\r\n                body:JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchUserSuccess(res));\r\n                console.log(\"Get User===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchUserError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchUsers;","import {\r\n  FETCH_USER_REQUEST,\r\n  FETCH_USER_SUCCESS,\r\n  FETCH_USER_ERROR\r\n} from '../constants'\r\n  export const getUsers = () => {\r\n    return (dispatch, getState) => {\r\n/*       navigator.geolocation.getCurrentPosition((position) => {\r\n        var lat = parseFloat(position.coords.latitude)\r\n        var long = parseFloat(position.coords.longitude)\r\n  \r\n        var initialRegion = {\r\n          latitude: lat,\r\n          longitude: long,\r\n          latitudeDelta: LATITUDE_DELTA,\r\n          longitudeDelta: LONGITUDE_DELTA,\r\n        }\r\n        dispatch({ type: GET_USER_LOCATION, currentResion: initialRegion });\r\n      },\r\n        (error) => alert(JSON.stringify(error)),\r\n        { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }); */\r\n    };\r\n  };\r\n  \r\n  // action.js\r\n\r\nexport function fetchUserRequest() {\r\n    return {\r\n        type: FETCH_USER_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchUserSuccess(user) {\r\n  console.log(\"User Action +++>\", user)\r\n    return {\r\n        type: FETCH_USER_SUCCESS,\r\n        user: user\r\n    }\r\n}\r\n\r\nexport function fetchUserError(error) {\r\n    return {\r\n        type: FETCH_USER_ERROR,\r\n        error: error\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, FormControlLabel,  Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Edit } from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../../common/config';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport Status from \"../../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUsers from \"../../../services/users/UserService\";\nimport { useUserState } from \"../../../context/UserContext\";\n\nfunction UserPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userData = useSelector(state => state.user);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n\n  useEffect(() => {\n    props.fetchUsers();\n    console.log(userData, props.user, user);\n    setDataSource(userData.data);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isActive\",\n      label: \"Active\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"user_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                  onClick={(e) => {\n                    actionEdit(e, value)\n                  }}\n                >\n                  <Edit style={{fontSize:'18'}}/>\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n  // const actionClick = (event, i) => {\n  //   setSelectedRowIndex(i);\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const actionClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  //Edit user\n  const actionEdit = (e, i) => {\n    setSelectedRowIndex(i)\n    console.log(\"=================>\",selectedRowIndex, i);\n    history.push(\"/app/usermanage/user/\" + i + \"/edit\");\n    // history.push(\"/app/usermanage/user/\" + selectedRowIndex + \"/edit\");\n  }\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n      \n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = userData.user[data.dataIndex].user_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteUser`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    /* onRowClick: (row, meta) => {\n      onRowClick(row, meta)\n    },\n    onRowsSelect: (cur, all) => {\n      onRowSelect(cur, all)\n    },\n */\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Users\" button={[\"Add New\"]} data={dataSource} category=\"user\" history={history}/>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          {/* <MuiThemeProvider theme={getMuiTheme()}> */}\n            <MUIDataTable\n              title={\"Users\"}\n              data={userData.user}\n              // data={dataSource}\n              columns={columns}\n              options={options}\n            />\n          {/* </MuiThemeProvider> */}\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open}/>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUsers: fetchUsers\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserPage);\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, Switch, FormControlLabel, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../components/Widget/Widget\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../../components/Notification/Notification\";\nimport fetchCompany from \"../../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../../common/config';\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditUser(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const userData = useSelector(state => state.user);\n  const [errorToastId, setErrorToastId] = useState(null);\n  const [dataSource, setDataSource] = useState([]);\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n  const companyData = useSelector(state => state.company);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n  \n  // input form datas\n  const [state, setState] = useState({\n    full_name: '',\n    password: \"\",\n    email: \"\",\n    phone_number: '',\n    company_id: '',\n    isActive: false\n  })\n\n  const update_id = props.match.params.user\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.data);\n    getUserInfo(update_id)\n\n  }, [])\n\n  const getUserInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id\n      })\n    };\n    fetch(`${SERVER_URL}getUserInfoById`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        setState(() => ({\n          ...state,\n          full_name: data[0].full_name,\n          password: data[0].password,\n          email: data[0].email,\n          phone_number: data[0].phone_number,\n          company_id: data[0].company_id.toString(),\n          isActive: data[0].isActive\n        }))\n      })\n      .catch(error => {\n        console.error('There was an error!', error);\n      });\n  }\n\n  const updateUserInfo = (user_id) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user_id: user_id,\n        full_name: state.full_name,\n        email: state.email,\n        phone_number: state.phone_number,\n        company_id: state.company_id,\n        isAdmin: false,\n        isActive: state.isActive\n      })\n    };\n    fetch(`${SERVER_URL}updateUser`, requestOptions)\n      .then(async response => {\n        const data = await response.json();\n        console.log(\"Response Data=============>\", data)\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        handleNotificationCall(\"shipped\");\n      })\n      .catch(error => {\n        handleNotificationCall(\"error\");\n        console.error('There was an error!', error);\n      });\n  }\n\n  const objArray2Array = (original) => {\n    console.log('originall ====> ', original, companyData.data)\n    let tmp = [];\n    if (Boolean(original)) {\n      if (original.length) {\n        original.map(item => {\n          tmp.push(item?.company_id.toString());\n        })\n        return tmp;\n      }\n      return [];\n    } else {\n      return []\n    }\n  }\n\n  const companies = objArray2Array(companyData.company)\n\n  //input fields event\n  const handleChange = (e, field) => {\n    let comboFields = ['company_id'];\n    if (comboFields.includes(field)) {\n      setState(prevState => ({\n        ...prevState, [field]: e\n      }))\n    } else if (e.target.name == 'isActive') {\n      setState({ ...state, [e.target.name]: e.target.checked });\n    } else {\n      const { name, value } = e.target;\n      setState(prevState => ({\n        ...prevState, [field]: value\n      }))\n    }\n  }\n\n\n  const onSave = () => {\n    if (state.full_name == null || state.full_name == \"\") {\n      notify(\"Please enter name.\")\n      return\n    } else if (state.email.length < 3 || validateEmail(state.email) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\n      notify('Please enter valid phone number')\n      return\n    } else if (state.company_id.length < 1) {\n      notify(\"Please enter company id.\")\n      return\n    } else {\n      updateUserInfo(update_id)\n    }\n  }\n\n  const onCancel = () => {\n    history.push(\"/app/usermanage/user\");\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Edit User\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={12}>\n          <Widget title=\"\" disableWidgetMenu>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\n                  handleChange={(e) => handleChange(e, 'full_name')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Email\" value={state.email} handleChange={(e) => handleChange(e, 'email')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n              </Grid>\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <CustomCombobox req={true} addbtn={false} name=\"Company ID\" items={companies} value={state.company_id}\n                  handleChange={(e) => handleChange(e, 'company_id')} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n\n              <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                <Typography>Activate</Typography>\n                <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n                  <FormControlLabel\n                    control={<Switch checked={state.isActive} onChange={handleChange} name=\"isActive\" />}\n                    label=\"Active\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Grid container spacing={1}>\n              <Grid item xs={8} md={8} lg={8}></Grid>\n              <Grid item xs={4} md={4} lg={4}>\n                <Grid container spacing={2} className={classes.buttonContainer}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.button}\n                      startIcon={<Icons.Cancel />}\n                      onClick={() => onCancel()}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<Icons.Save />}\n                      onClick={() => onSave()}\n                    >\n                      Save\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  /**\n   * Notification Bar Functions\n   * @param {*} componentProps \n   * @param {*} options \n   */\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Something went wrong!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was successfully saved!\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n  // #############################################################\n  function CloseButton({ closeToast, className }) {\n    return <Icons.Close className={className} onClick={closeToast} />;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditUser);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport Notification from \"../../../components/Notification/Notification\";\r\nimport fetchCompany from \"../../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SERVER_URL } from '../../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddUser(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n    console.log(\"Add Admin get companys ====> \", companyData.company)\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_id.toString());\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        full_name: '',\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_number: '',\r\n        company_id: \"\",\r\n    })\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_id'];\r\n        if (comboFields.includes(field)) {\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    //date picker event\r\n    const handleDateChange = (date, field) => {\r\n        setState(prevState => ({\r\n            ...prevState, [field]: date\r\n        }))\r\n    };\r\n\r\n    const onSave = () => {\r\n        if (state.full_name == null || state.full_name == \"\") {\r\n            notify(\"Please enter name.\")\r\n            return\r\n        } else if (state.email.length < 3 || validateEmail(state.email) == false) {\r\n            notify(\"Please enter valid email.\");\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_id.length < 1) {\r\n            notify(\"Please enter company id.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    full_name: state.full_name,\r\n                    password: state.password,\r\n                    email: state.email,\r\n                    phone_number: state.phone_number,\r\n                    company_id: state.company_id,\r\n                    isAdmin: false,\r\n                    isActive: false\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addUser`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.user_id != null) {\r\n                        notify(\"This user is already exist.\\n Please use another email.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/usermanage/user\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New User\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Full Name\" value={state.full_name}\r\n                                    handleChange={(e) => handleChange(e, 'full_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Email\" value={state.email}\r\n                                    handleChange={(e) => handleChange(e, 'email')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Password\" value={state.password}\r\n                                    handleChange={(e) => handleChange(e, 'password')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} type=\"number\"\r\n                                    handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} addbtn={false} name=\"Company ID\" items={companies} value={state.company_id}\r\n                                    handleChange={(e) => handleChange(e, 'company_id')} />\r\n                                {/* <CustomInput title=\"Company ID\" value={state.company_id} handleChange={(e) => handleChange(e, 'company_id')} /> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddUser);\r\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, FormControlLabel, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from \"@material-ui/icons\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { bindActionCreators } from \"redux\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction CompanysPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const companyData = useSelector(state => state.company);\n\n  useEffect(() => {\n    props.fetchCompany();\n    console.log(companyData)\n    setDataSource(companyData.company);\n  }, [])\n  \n  //Show notification\n  const notify = (message) => toast(message);\n\n  const columns = [\n    {\n      name: \"company_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"company_owner_name\",\n      label: \"Owner Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"time_limit_per_schedule\",\n      label: \"Time Limit\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"late_policy\",\n      label: \"Late Policy\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"min_schedule_time\",\n      label: \"Min Time\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"max_schedule_time\",\n      label: \"Max Time\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"upload\",\n      label: \"Upload\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"company_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    console.log(\"====\", dataSource[i]);\n    history.push(\"/app/company/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = companyData.company[data.dataIndex].company_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            company_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteCompany`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Companies\" button={[\"Add New\"]} data={dataSource} category=\"company\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Companies\"}\n            data={companyData.company}\n            // data={dataSource}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanysPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\n// import LocationPicker from 'react-location-picker';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\n\r\nexport default function AddCompany(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n\r\n    // const [location, setLocation] = useState('');\r\n    // const [defaultPosition, setDefaultPosition] = useState({\r\n    //     lat: 0,\r\n    //     lng: 0\r\n    // })\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    // input form datas\r\n\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        owner_name: '',\r\n        address: '',\r\n        phone_number: \"\",\r\n        time_limit_per_schedule: 30,\r\n        late_policy: 60,\r\n        min_schedule_time: 60,\r\n        max_schedule_time: 360,\r\n        notes: 1,\r\n        upload: 0\r\n    })\r\n\r\n    useEffect(() => {\r\n        // navigator.geolocation.getCurrentPosition(function (position) {\r\n        //     console.log(\"Latitude is :\", position.coords.latitude);\r\n        //     console.log(\"Longitude is :\", position.coords.longitude);\r\n        //     setDefaultPosition({\r\n        //         lat: position.coords.latitude,\r\n        //         lng: position.coords.longitude\r\n        //     })\r\n        // });\r\n    }, [])\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        if (e.target.name == \"notes\" || e.target.name == \"upload\") {\r\n            setState({ ...state, [e.target.name]: e.target.checked });\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const addItem = (field) => {\r\n        console.log(field)\r\n    }\r\n\r\n    //date picker event\r\n    const handleDateChange = (date, field) => {\r\n        setState(prevState => ({\r\n            ...prevState, [field]: date\r\n        }))\r\n    };\r\n\r\n\r\n    // const handleLocationChange = ({ position, address, places }) => {\r\n\r\n    //     // Set new location\r\n    //     console.log(\"Address ====> \", address)\r\n    //     setLocation({\r\n    //         address: address\r\n    //     });\r\n    // }\r\n\r\n    const onSave = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter company entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter company owner name.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter company address.\")\r\n            return\r\n        } else if (state.min_schedule_time < 0) {\r\n            notify(\"Please enter valid minimum schedule time.\")\r\n            return\r\n        } else if (state.max_schedule_time < 0) {\r\n            notify(\"Please enter valid maximum schedule time.\")\r\n            return\r\n        } else if (state.min_schedule_time > state.max_schedule_time) {\r\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\r\n            return\r\n        } else if (state.time_limit_per_schedule < 0) {\r\n            notify(\"Please enter valid time limit.\")\r\n            return\r\n        } else if (state.late_policy < 0) {\r\n            notify(\"Please enter valid late policy.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    company_entity_name: state.entity_name,\r\n                    company_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    notes: state.notes,\r\n                    upload: state.upload,\r\n                    time_limit_per_schedule: state.time_limit_per_schedule,\r\n                    late_policy: state.late_policy,\r\n                    min_schedule_time: state.min_schedule_time,\r\n                    max_schedule_time: state.max_schedule_time\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addCompany`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.company_id != null) {\r\n                        notify(\"This company is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/company\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Company\" /* button={[\"Add New\", \"Import\", \"Export\"]}  data={data}*/ />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Min Time\" value={state.min_schedule_time} handleChange={(e) => handleChange(e, 'min_shedule_time')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Max Time\" value={state.max_schedule_time} handleChange={(e) => handleChange(e, 'max_schedule_time')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Time Limit\" value={state.time_limit_per_schedule} handleChange={(e) => handleChange(e, 'time_limit_per_schedule')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Late Policy\" value={state.late_policy} handleChange={(e) => handleChange(e, 'late_policy')} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Notes</Typography>\r\n                                </Grid>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={state.notes} onChange={handleChange} name=\"notes\" />}\r\n                                    label=\"Notes\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <Grid item>\r\n                                    <Typography variant={'subtitle1'}>Upload</Typography>\r\n                                </Grid>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={state.upload} onChange={handleChange} name=\"upload\" />}\r\n                                    label=\"Upload\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                {/* <LocationPicker\r\n                                    containerElement={<div style={{ height: '100%' }} />}\r\n                                    mapElement={<div style={{ height: '400px' }} />}\r\n                                    defaultPosition={defaultPosition}\r\n                                    onChange={handleLocationChange}\r\n                                /> */}\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditCompany(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const [dataSource, setDataSource] = useState([]);\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0)\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        owner_name: '',\n        address: \"\",\n        phone_number: \"\",\n        time_limit_per_schedule: 0,\n        late_policy: 0,\n        min_schedule_time: 0,\n        max_schedule_time: 0,\n        notes: 0,\n        upload: 0\n    })\n    const update_id = props.match.params.company\n    useEffect(() => {\n        getCompanyInfo(update_id)\n    }, [])\n\n\n    const getCompanyInfo = (company_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id\n            })\n        };\n        fetch(`${SERVER_URL}getCompanyById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.company_entity_name,\n                    owner_name: data.company_owner_name,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    time_limit_per_schedule: data.time_limit_per_schedule,\n                    late_policy: data.late_policy,\n                    min_schedule_time: data.min_schedule_time,\n                    max_schedule_time: data.max_schedule_time,\n                    notes: data.notes,\n                    upload: data.upload\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n\n    const updateCompanyInfo = (company_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                company_id: company_id,\n                company_entity_name: state.entity_name,\n                company_owner_name: state.owner_name,\n                address: state.address,\n                phone_number: state.phone_number,\n                notes: state.notes,\n                upload: state.upload,\n                time_limit_per_schedule: state.time_limit_per_schedule,\n                late_policy: state.late_policy,\n                min_schedule_time: state.min_schedule_time,\n                max_schedule_time: state.max_schedule_time\n            })\n        };\n        fetch(`${SERVER_URL}updateCompany`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n\n    //input fields event\n    const handleChange = (e, field) => {\n        if (e.target.name == \"notes\" || e.target.name == \"upload\") {\n            setState({ ...state, [e.target.name]: e.target.checked });\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const addItem = (field) => {\n        console.log(field)\n    }\n\n    //date picker event\n    const handleDateChange = (date, field) => {\n        setState(prevState => ({\n            ...prevState, [field]: date\n        }))\n    };\n\n    //file picker event\n    const handleCapture = ({ target }) => {\n        const fileReader = new FileReader();\n        // const name = target.accept.includes('image') ? 'images' : 'videos';\n        setState((prevState) => ({\n            ...prevState, file: target.files[0]\n        }));\n\n        /* fileReader.readAsDataURL(target.files[0]);\n        fileReader.onload = (e) => {\n          setState((prevState) => ({\n            ...prevState, file: e.target.result\n          }));\n        }; */\n    };\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter company entity name.\")\n            return\n        } else if (state.owner_name == null || state.owner_name == \"\") {\n            notify(\"Please enter company owner name.\")\n            return\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter company address.\")\n            return\n        } else if (state.min_schedule_time < 0) {\n            notify(\"Please enter valid minimum schedule time.\")\n            return\n        } else if (state.max_schedule_time < 0) {\n            notify(\"Please enter valid maximum schedule time.\")\n            return\n        } else if (state.min_schedule_time > state.max_schedule_time) {\n            notify(\"Minimum schedule time can't bigger than Maximum schedule time.\")\n            return\n        } else if (state.time_limit_per_schedule < 0) {\n            notify(\"Please enter valid time limit.\")\n            return\n        } else if (state.late_policy < 0) {\n            notify(\"Please enter valid late policy.\")\n            return\n        } else {\n            updateCompanyInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/company\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Company\" /* button={[\"Add New\", \"Import\", \"Export\"]}  data={data}*/ />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Time Limit\" value={state.time_limit_per_schedule} handleChange={(e) => handleChange(e, 'time_limit_per_schedule')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Late Policy\" value={state.late_policy} handleChange={(e) => handleChange(e, 'late_policy')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Min Time\" value={state.min_schedule_time} handleChange={(e) => handleChange(e, 'min_shedule_time')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput title=\"Max Time\" value={state.max_schedule_time} handleChange={(e) => handleChange(e, 'max_schedule_time')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Notes</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={state.notes} onChange={handleChange} name=\"notes\" />}\n                                    label=\"Notes\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <Grid item>\n                                    <Typography variant={'subtitle1'}>Upload</Typography>\n                                </Grid>\n                                <FormControlLabel\n                                    control={<Switch checked={state.upload} onChange={handleChange} name=\"upload\" />}\n                                    label=\"Upload\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditCompany);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { FETCH_CLIENT_REQUEST, FETCH_CLIENT_SUCCESS, FETCH_CLIENT_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    client: [],\r\n    error: null\r\n}\r\n\r\nexport default function ClientReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_CLIENT_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CLIENT_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                client: action.client\r\n            }\r\n        case FETCH_CLIENT_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchClientRequest, fetchClientSuccess, fetchClientError } from \"../../redux/actions/ClientAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport ClientReducer from \"../../redux/reducers/ClientReducer\";\r\n\r\nfunction fetchClient() {\r\n    return dispatch => {\r\n        dispatch(fetchClientRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getClient`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchClientSuccess(res));\r\n                console.log(\"Get Client===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchClientError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchClient;","import {\r\n    FETCH_CLIENT_REQUEST,\r\n    FETCH_CLIENT_SUCCESS,\r\n    FETCH_CLIENT_ERROR\r\n  } from '../constants'\r\n    export const getClient = () => {\r\n      return (dispatch, getState) => {\r\n  /*       navigator.geolocation.getCurrentPosition((position) => {\r\n          var lat = parseFloat(position.coords.latitude)\r\n          var long = parseFloat(position.coords.longitude)\r\n    \r\n          var initialRegion = {\r\n            latitude: lat,\r\n            longitude: long,\r\n            latitudeDelta: LATITUDE_DELTA,\r\n            longitudeDelta: LONGITUDE_DELTA,\r\n          }\r\n          dispatch({ type: GET_USER_LOCATION, currentResion: initialRegion });\r\n        },\r\n          (error) => alert(JSON.stringify(error)),\r\n          { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }); */\r\n      };\r\n    };\r\n    \r\n    // action.js\r\n  \r\n  export function fetchClientRequest() {\r\n      return {\r\n          type: FETCH_CLIENT_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchClientSuccess(client) {\r\n    console.log(\"action===>\", client)\r\n      return {\r\n          type: FETCH_CLIENT_SUCCESS,\r\n          client: client\r\n      }\r\n  }\r\n  \r\n  export function fetchClientError(error) {\r\n      return {\r\n          type: FETCH_CLIENT_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchClient from \"../../services/client/ClientService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction ClientsPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const clientData = useSelector(state => state.client);\n\n  useEffect(() => {\n    console.log(clientData)\n    props.fetchClient()\n    setDataSource(clientData.client);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const columns = [\n    {\n      name: \"client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_owner_name\",\n      label: \"Owner Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/client/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = clientData.client[data.dataIndex].client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    \n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Clients\" button={[\"Add New\"]} data={dataSource} category=\"client\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Clients\"}\n            data={clientData.client}\n            // data={dataSource}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  client: state.client\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchClient: fetchClient\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientsPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport fetchCompany from \"../../services/company/CompanyService\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddClient(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const companyData = useSelector(state => state.company);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    \r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        owner_name: \"\",\r\n        address: \"\",\r\n        location: '',\r\n        phone_number: '',\r\n        company_id: ''\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        props.fetchCompany();\r\n        console.log(companyData)\r\n        setDataSource(companyData.data);\r\n    }, [])\r\n\r\n\r\n    const objArray2Array = (original) => {\r\n        console.log('originall ====> ', original, companyData.data)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    tmp.push(item?.company_id.toString());\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const companies = objArray2Array(companyData.company)\r\n\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n        let comboFields = ['company_id'];\r\n        if (comboFields.includes(field)) {\r\n            setState(prevState => ({\r\n                ...prevState, [field]: e\r\n            }))\r\n        } else {\r\n            const { name, value } = e.target;\r\n            setState(prevState => ({\r\n                ...prevState, [field]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter client owner name.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_id.length < 1) {\r\n            notify(\"Please enter company id.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    client_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/client\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Company ID\" items={companies} value={state.company_id}\r\n                                    handleChange={(e) => handleChange(e, 'company_id')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddClient);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchCompany from \"../../services/company/CompanyService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditClient(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [dataSource, setDataSource] = useState([]);\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const companyData = useSelector(state => state.company);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        owner_name: '',\n        address: \"\",\n        location: \"\",\n        phone_number: '',\n        company_id: ''\n    })\n\n    const update_id = props.match.params.client\n    useEffect(() => {\n        props.fetchCompany();\n        setDataSource(companyData.company);\n        getClientInfo(update_id)\n    }, [])\n\n    const getClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientProfileById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.client_entity_name,\n                    owner_name: data.client_owner_name,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    company_id: data.company_id.toString(),\n                    location: data.location\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const updateClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id,\n                client_entity_name: state.entity_name,\n                client_owner_name: state.owner_name,\n                address: state.address,\n                phone_number: state.phone_number,\n                location: state.location,\n                company_id: state.company_id\n            })\n        };\n        console.log(\"------------------------\", requestOptions.body)\n        fetch(`${SERVER_URL}updateClient`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n    const objArray2Array = (original) => {\n        console.log('originall ====> ', original, companyData.company)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    tmp.push(item?.company_id.toString());\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const companies = objArray2Array(companyData.company)\n\n\n    //input fields event\n    const handleChange = (e, field) => {\n        let comboFields = ['company_id'];\n        if (comboFields.includes(field)) {\n            setState(prevState => ({\n                ...prevState, [field]: e\n            }))\n        } else {\n            const { name, value } = e.target;\n            setState(prevState => ({\n                ...prevState, [field]: value\n            }))\n        }\n    }\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter company entity name.\")\n            return\n        } else if (state.owner_name == null || state.owner_name == \"\") {\n            notify(\"Please enter company owner name.\")\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter company address.\")\n            return\n        } else if (state.location == null || state.location == \"\") {\n            notify(\"Please enter company location.\")\n            return\n        } else if (state.phone_number.length != 10) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.company_id.length < 1) {\n            notify(\"Please enter company id.\")\n            return\n        } else {\n            updateClientInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/client\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Company ID\" items={companies} value={state.company_id}\n                                    handleChange={(e) => handleChange(e, 'company_id')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\n                            </Grid>\n\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditClient);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { FETCH_SALESCLIENT_REQUEST, FETCH_SALESCLIENT_SUCCESS, FETCH_SALESCLIENT_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    client: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesClientReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESCLIENT_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESCLIENT_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                sales: action.sales\r\n            }\r\n        case FETCH_SALESCLIENT_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchSalesClientRequest, fetchSalesClientSuccess, fetchSalesClientError } from \"../../redux/actions/SalesClientAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesReducer from \"../../redux/reducers/SalesReducer\";\r\n\r\nfunction fetchSalesClient() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesClientRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSalesClient`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesClientSuccess(res));\r\n                console.log(\"Get SalesClient===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesClientError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesClient;","import {\r\n    FETCH_SALESCLIENT_REQUEST,\r\n    FETCH_SALESCLIENT_SUCCESS,\r\n    FETCH_SALESCLIENT_ERROR\r\n  } from '../constants'\r\n    export const getSalesClient = () => {\r\n      return (dispatch, getState) => {\r\n  /*       navigator.geolocation.getCurrentPosition((position) => {\r\n          var lat = parseFloat(position.coords.latitude)\r\n          var long = parseFloat(position.coords.longitude)\r\n    \r\n          var initialRegion = {\r\n            latitude: lat,\r\n            longitude: long,\r\n            latitudeDelta: LATITUDE_DELTA,\r\n            longitudeDelta: LONGITUDE_DELTA,\r\n          }\r\n          dispatch({ type: GET_USER_LOCATION, currentResion: initialRegion });\r\n        },\r\n          (error) => alert(JSON.stringify(error)),\r\n          { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }); */\r\n      };\r\n    };\r\n    \r\n    // action.js\r\n  \r\n  export function fetchSalesClientRequest() {\r\n      return {\r\n          type: FETCH_SALESCLIENT_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientSuccess(sales) {\r\n    console.log(\"action===>\", sales)\r\n      return {\r\n          type: FETCH_SALESCLIENT_SUCCESS,\r\n          sales: sales\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientError(error) {\r\n      return {\r\n          type: FETCH_SALESCLIENT_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSalesClient from \"../../services/sales/SalesClientService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction SalesPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const salesData = useSelector(state => state.sales);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  useEffect(() => {\n    console.log(salesData)\n    props.fetchSalesClient()\n    setDataSource(salesData.sales);\n  }, [])\n\n  const columns = [\n    {\n      name: \"sales_client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/sales/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = salesData.sales[data.dataIndex].sales_client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            sales_client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n  return (\n    <>\n      <PageTitle title=\"Sales Clients\" button={[\"Add New\"]} data={dataSource} category=\"sales\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Sales Clients\"}\n            // data={dataSource}\n            data={salesData.sales}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesClient: fetchSalesClient\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SalesPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchClient from \"../../services/client/ClientService\";\nimport fetchUsers from \"../../services/users/UserService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditSales(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const userData = useSelector(state => state.user);\n    const clientData = useSelector(state => state.client);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.sales\n    const [state, setState] = useState({\n        sales_client_id: '',\n        client_name: '',\n        user_name: '',\n        client_id: '',\n        user_id: ''\n    })\n\n    useEffect(() => {\n        props.fetchClient()\n        props.fetchUsers();\n        getSalesClientInfo(update_id)\n    }, [])\n\n    const getSalesClientInfo = (sales_client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                sales_client_id: sales_client_id\n            })\n        };\n        fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    client_name: data.client_entity_name,\n                    user_name: data.full_name,\n                    client_id: data.client_id.toString(),\n                    user_id: data.user_id.toString()\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getClientNameList = (original) => {\n        console.log('originall ====> ', original, clientData.client)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.client_id,\n                        value: item?.client_entity_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const clients = getClientNameList(clientData.client)\n\n    console.log(\"Client Data =====> \", clients.map(item => {\n        return item?.value\n    }))\n\n    const getUserNameList = (original) => {\n        console.log('originall ====> ', original, userData.user)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.user_id,\n                        value: item?.full_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const users = getUserNameList(userData.user)\n\n    //input fields event\n    const handleUserChange = (e, field) => {\n\n        if (field == \"user_name\") {\n            if (users.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    user_name: e,\n                    user_id: users.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n    const handleClientChange = (e, field) => {\n\n        if (field == \"client_name\") {\n            if (clients.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    client_name: e,\n                    client_id: clients.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n\n    const onSave = () => {\n        if (state.user_name == null || state.user_name == \"\") {\n            notify(\"Please enter company user name.\")\n            return\n        } else if (state.client_name == null || state.client_name == \"\") {\n            notify(\"Please enter client name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    sales_client_id: update_id,\n                    client_id: state.client_id,\n                    user_id: state.user_id,\n                })\n            };\n            console.log(\"===============> \", requestOptions.body)\n            fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.sales_client_id != null) {\n                        notify(\"This client is already exist.\")\n                        return\n                    } else if (data.id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/sales\");\n    }\n\n\n    const userList = users.map(item => {\n        return item?.value\n    })\n\n    const clientList = clients.map(item => {\n        return item?.value\n    })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Sales Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    client: state.client\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchUsers: fetchUsers,\n    fetchClient: fetchClient\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSales);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport fetchClient from \"../../services/client/ClientService\";\r\nimport fetchUsers from \"../../services/users/UserService\";\r\nimport { SERVER_URL } from '../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddSales(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const userData = useSelector(state => state.user);\r\n    const clientData = useSelector(state => state.client);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        client_name: '',\r\n        user_name: \"\",\r\n        client_id: '',\r\n        user_id: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchClient()\r\n        props.fetchUsers();\r\n    }, [])\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n    const getClientNameList = (original) => {\r\n        console.log('originall ====> ', original, clientData.client)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const clients = getClientNameList(clientData.client)\r\n\r\n    console.log(\"Client Data =====> \", clients.map(item => {\r\n        return item?.value\r\n    }))\r\n\r\n    const getUserNameList = (original) => {\r\n        console.log('originall ====> ', original, userData.user)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.user_id,\r\n                        value: item?.full_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const users = getUserNameList(userData.user)\r\n\r\n\r\n    //input fields event\r\n    const handleUserChange = (e, field) => {\r\n\r\n        if (field == \"user_name\") {\r\n            if (users.filter(item => item.value == e)[0] != null) {\r\n                setState({\r\n                    ...state,\r\n                    user_name: e,\r\n                    user_id: users.filter(item => item.value == e)[0].key\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleClientChange = (e, field) => {\r\n\r\n        if (field == \"client_name\") {\r\n            if (clients.filter(item => item.value == e)[0] != null) {\r\n                setState({\r\n                    ...state,\r\n                    client_name: e,\r\n                    client_id: clients.filter(item => item.value == e)[0].key\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.user_name == null || state.user_name == \"\") {\r\n            notify(\"Please enter company user name.\")\r\n            return\r\n        } else if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.user_id,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/sales\");\r\n    }\r\n\r\n    const userList = users.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    const clientList = clients.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Sales Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\r\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\r\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    client: state.client\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchUsers: fetchUsers,\r\n    fetchClient: fetchClient\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddSales);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { FETCH_SCHEDULE_REQUEST, FETCH_SCHEDULE_SUCCESS, FETCH_SCHEDULE_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    schedule: [],\r\n    error: null\r\n}\r\n\r\nconst ScheduleReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_SCHEDULE_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SCHEDULE_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                schedule: action.schedule\r\n            }\r\n        case FETCH_SCHEDULE_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ScheduleReducer;\r\n","import { fetchScheduleRequest, fetchScheduleSuccess, fetchScheduleError } from \"../../redux/actions/ScheduleAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport ScheduleReducer from \"../../redux/reducers/ScheduleReducer\";\r\n\r\nfunction fetchSchedule() {\r\n    return dispatch => {\r\n        dispatch(fetchScheduleRequest());\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSchedule`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchScheduleSuccess(res));\r\n                console.log(\"Get Schedule===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchScheduleError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSchedule;","import {\r\n    FETCH_SCHEDULE_REQUEST,\r\n    FETCH_SCHEDULE_SUCCESS,\r\n    FETCH_SCHEDULE_ERROR\r\n  } from '../constants'\r\n    export const getSchedule = () => {\r\n      return (dispatch, getState) => {\r\n  /*       navigator.geolocation.getCurrentPosition((position) => {\r\n          var lat = parseFloat(position.coords.latitude)\r\n          var long = parseFloat(position.coords.longitude)\r\n    \r\n          var initialRegion = {\r\n            latitude: lat,\r\n            longitude: long,\r\n            latitudeDelta: LATITUDE_DELTA,\r\n            longitudeDelta: LONGITUDE_DELTA,\r\n          }\r\n          dispatch({ type: GET_USER_LOCATION, currentResion: initialRegion });\r\n        },\r\n          (error) => alert(JSON.stringify(error)),\r\n          { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }); */\r\n      };\r\n    };\r\n    \r\n    // action.js\r\n  \r\n  export function fetchScheduleRequest() {\r\n      return {\r\n          type: FETCH_SCHEDULE_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleSuccess(schedule) {\r\n    console.log(\"action===>\", schedule)\r\n      return {\r\n          type: FETCH_SCHEDULE_SUCCESS,\r\n          schedule: schedule\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleError(error) {\r\n      return {\r\n          type: FETCH_SCHEDULE_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSchedule from \"../../services/schedule/ScheduleService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\n\nfunction SchedulePage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const scheduleData = useSelector(state => state.schedule);\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n\n  useEffect(() => {\n    console.log(scheduleData)\n    props.fetchSchedule();\n    setDataSource(scheduleData.data);\n  }, [])\n\n  console.log(\"schedule data=====>\", scheduleData)\n\n  const columns = [\n    {\n      name: \"schedule_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_datetime\",\n      label: \"DateTime\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"predicted_time_spent\",\n      label: \"Predicted Time Spent\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Check in\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out_datetime\",\n      label: \"Check out\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"reason\",\n      label: \"Reason\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isLate\",\n      label: \"Is Late\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"exceed_time_limit\",\n      label: \"Exceed Time Limit\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n  \n  /// Table Action event end\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = scheduleData.schedule[data.dataIndex].schedule_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            schedule_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSchedule`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    /* onRowClick: (row, meta) => {\n      onRowClick(row, meta)\n    },\n    onRowsSelect: (cur, all) => {\n      onRowSelect(cur, all)\n    },\n */\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Schedules\" data={dataSource} history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Schedules\"}\n            data={scheduleData.schedule}\n            // data={dataSource}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  schedule: state.schedule\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSchedule: fetchSchedule\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SchedulePage);\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport { red, blue} from \"@material-ui/core/colors\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles(theme => ({\r\n\r\n  container: {\r\n    paddingTop: 20\r\n  },\r\n  version: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport { Typography } from \"../Wrappers/Wrappers\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// components\r\n\r\n/**\r\n * \r\n * @param {\r\n * \r\n * title, selectedDate\r\n * handleChange\r\n * \r\n * } param0 \r\n */\r\n\r\nexport default function Footer(props) {\r\n    var classes = useStyles();\r\n    var theme = useTheme();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                    <Typography size={12} weight=\"light\">\r\n                        Powered By Asile\r\n                </Typography>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={12} className={classes.version}>\r\n                    <Typography size={12} weight=\"light\">\r\n                        Version 0.0.1\r\n                </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport { Grid } from \"@material-ui/core\";\nimport Error from \"../../pages/error/Error\";\nimport AdminPage from \"../../pages/UserManage/Admins/Admins\";\nimport EditAdminPage from \"../../pages/UserManage/Admins/EditAdmin\";\nimport AddAdminPage from \"../../pages/UserManage/Admins/AddAdmin\";\nimport UserPage from \"../../pages/UserManage/Users/Users\";\nimport EditUserPage from \"../../pages/UserManage/Users/EditUser\";\nimport AddUserPage from \"../../pages/UserManage/Users/AddUser\";\n\nimport CompanyPage from \"../../pages/Companys/Companys\";\nimport AddCompanyPage from \"../../pages/Companys/AddCompany\";\nimport EditCompanyPage from \"../../pages/Companys/EditCompany\";\nimport ClientsPage from \"../../pages/Client/Client\";\nimport AddClientPage from \"../../pages/Client/AddClient\";\nimport EditClientPage from \"../../pages/Client/EditClient\";\nimport SalesPage from \"../../pages/Sales/Sales\";\nimport EditSalesPage from \"../../pages/Sales/EditSales\";\nimport AddSalesPage from \"../../pages/Sales/AddSales\";\nimport SchedulePage from \"../../pages/Schedule/Schedule\";\nimport Footer from \"../Footer/Footer\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n  const matches1600 = useMediaQuery('(min-width:1600px)');\n  const matches1800 = useMediaQuery('(min-width:1800px)');\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        {/* <Header history={props.history} /> */}\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n            \n          })}\n        >\n          <Header history={props.history} />\n          <div className={classnames(classes.mainContainer,{\n            [classes.padding1600]: matches1600,\n            [classes.padding1800]: matches1800,\n            }\n          )}>\n            <Grid>\n              <Switch>\n                <Route exact path=\"/app/usermanage\" component={AdminPage} />\n                <Route\n                  exact\n                  path=\"/app\"\n                  render={() => <Redirect to=\"/app/usermanage/admin\" />}\n                />\n                <Route exact path=\"/app/usermanage/admin\" component={AdminPage} /> \n                <Route exact path=\"/app/usermanage/admin/:admin/edit\" component={EditAdminPage} /> \n                <Route exact path=\"/app/usermanage/admin/add\" component={AddAdminPage} />\n                <Route exact path=\"/app/usermanage/user\" component={UserPage} /> \n                <Route exact path=\"/app/usermanage/user/:user/edit\" component={EditUserPage} /> \n                <Route exact path=\"/app/usermanage/user/add\" component={AddUserPage} />\n                <Route exact path=\"/app/company\" component={CompanyPage} />\n                <Route exact path=\"/app/company/add\" component={AddCompanyPage} />\n                <Route exact path=\"/app/company/:company/edit\" component={EditCompanyPage} />\n                <Route exact path=\"/app/client\" component={ClientsPage} />\n                <Route exact path=\"/app/client/add\" component={AddClientPage} />\n                <Route exact path=\"/app/client/:client/edit\" component={EditClientPage} />\n                <Route exact path=\"/app/sales\" component={SalesPage} />\n                <Route exact path=\"/app/sales/:sales/edit\" component={EditSalesPage} />\n                <Route exact path=\"/app/sales/add\" component={AddSalesPage} />\n                <Route exact path=\"/app/schedule\" component={SchedulePage} />\n                <Route component={Error} />\n              </Switch>\n            </Grid>\n            <Footer />\n          </div>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  MenuOpen, LocalAtmOutlined, ShoppingCartOutlined,\n  AccountBalanceOutlined, AssessmentOutlined,\n  FormatAlignJustifyOutlined, FormatAlignLeftOutlined, People, Settings, AccountCircleOutlined, BusinessOutlined, PeopleAltOutlined, TransferWithinAStationOutlined, TimerOutlined\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n//logo\nimport logo from \"../../assets/images/logo.png\";\n// import biglogo from \"../../assets/images/biglogo.jpg\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { Typography } from \"../Wrappers/Wrappers\";\n\nconst structure = [\n  {\n    id: 0,\n    label: \"User\",\n    link: \"/app/userview\",\n    icon: <AccountCircleOutlined fontSize=\"small\"/>,\n  },\n  {\n    id: 1,\n    label: \"Client\",\n    link: \"/app/clientview\",\n    icon: <PeopleAltOutlined fontSize=\"small\"/>,\n  },\n  {\n    id: 2,\n    label: \"Schedule\",\n    link: \"/app/scheduleview\",\n    icon: <TimerOutlined fontSize=\"small\"/>,\n  },\n  {\n    id: 3,\n    label: \"Sales Client\",\n    link: \"/app/salesview\",\n    icon: <TransferWithinAStationOutlined fontSize=\"small\"/>,\n  },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // global\n  var layoutState = useLayoutState();\n  // var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames(classes.drawerPaper, {\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar}>\n        {/* <img src={layoutState.isSidebarOpened ? biglogo : logo} alt=\"D\" className={layoutState.isSidebarOpened ? classes.biglogotypeImage : classes.logotypeImage} /> */}\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButton,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <FormatAlignJustifyOutlined\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n              <FormatAlignLeftOutlined\n                classes={{\n                  root: classNames(\n                    classes.headerIcon,\n                    classes.headerIconCollapse,\n                  ),\n                }}\n              />\n            )}\n        </IconButton>\n      </div>\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            style={{color:'white'}}\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { fetchUserViewRequest, fetchUserViewSuccess, fetchUserViewError } from \"../../redux/actions/UserViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\n\r\nfunction fetchUserView() {\r\n    console.log('fetching Users ...')\r\n    return dispatch => {\r\n        dispatch(fetchUserViewRequest());\r\n        const body = { company_id: localStorage.getItem('company_id') };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getUserById`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.error) {\r\n                        throw (res.error);\r\n                    }\r\n                    dispatch(fetchUserViewSuccess(res));\r\n                    return res;\r\n                })\r\n                .catch(error => {\r\n                    dispatch(fetchUserViewError(error));\r\n                })\r\n        }, 1000);\r\n\r\n    }\r\n}\r\n\r\nexport default fetchUserView;","import {\r\n  FETCH_USERVIEW_REQUEST,\r\n  FETCH_USERVIEW_SUCCESS,\r\n  FETCH_USERVIEW_ERROR\r\n} from '../constants'\r\n  export const getUserView = () => {\r\n    return (dispatch, getState) => {\r\n\r\n    };\r\n  };\r\n  \r\n  // action.js\r\n\r\nexport function fetchUserViewRequest() {\r\n    return {\r\n        type: FETCH_USERVIEW_REQUEST\r\n    }\r\n}\r\n\r\nexport function fetchUserViewSuccess(userview) {\r\n    return {\r\n        type: FETCH_USERVIEW_SUCCESS,\r\n        userview: userview\r\n    }\r\n}\r\n\r\nexport function fetchUserViewError(error) {\r\n    return {\r\n        type: FETCH_USERVIEW_ERROR,\r\n        error: error\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport BackdropLoading from \"../../components/Loading/BackdropLoading\";\nimport { bindActionCreators } from \"redux\";\nimport fetchUserView from \"../../services/users/UserViewService\";\nimport { useUserState } from \"../../context/UserContext\";\n\n\nfunction UserViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const userviewData = useSelector(state => state.userview);\n\n  //loading image\n  const [open, setOpen] = useState(false);\n  let user = useUserState();\n\n  useEffect(() => {\n    props.fetchUserView();\n    setDataSource(userviewData.userview);     // from backend(redux)\n    // setDataSource(data);\n  }, [])\n  \n  const getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          paddingTop: \"5px\",\n          paddingBottom: \"5px\",\n          fontSize: '.8125rem',\n        },\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderColor: '#d3d3d3',\n        fontSize: '.8125rem',\n      },\n      head: {\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n      },\n    },\n  })\n\n  const columns = [\n    {\n      name: \"user_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n  ];\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n  };\n\n  if(userviewData.loading){\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Users\" data={dataSource} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          {/* <MuiThemeProvider theme={getMuiTheme()}> */}\n            <MUIDataTable\n              title={\"Users\"}\n              // data={dataSource}\n              data={userviewData.userview}\n              columns={columns}\n              options={options}\n            />\n          {/* </MuiThemeProvider> */}\n        </Grid>\n      </Grid>\n      <BackdropLoading open={open}/>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userview: state.userview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchUserView: fetchUserView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserViewPage);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n\n  /**\n   * EditInvoice.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Invoice // eslint-disable-next-line\n\n  /**\n   * Show Invoice\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(3),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Invoice End\n\n  /**\n   * Notification Bar\n   */\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n  //Notification Bar End\n}));\n","import { FETCH_SCHEDULEVIEW_REQUEST, FETCH_SCHEDULEVIEW_SUCCESS, FETCH_SCHEDULEVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    scheduleview: [],\r\n    error: null\r\n}\r\n\r\nconst ScheduleViewReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_SCHEDULEVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SCHEDULEVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                scheduleview: action.scheduleview\r\n            }\r\n        case FETCH_SCHEDULEVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ScheduleViewReducer;\r\n","import { fetchScheduleViewRequest, fetchScheduleViewSuccess, fetchScheduleViewError } from \"../../redux/actions/ScheduleViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport ScheduleViewReducer from \"../../redux/reducers/ScheduleViewReducer\";\r\n\r\nfunction fetchScheduleView() {\r\n    return dispatch => {\r\n        dispatch(fetchScheduleViewRequest());\r\n        const body = { company_id: localStorage.getItem('company_id') };\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getScheduleByCompanyId`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchScheduleViewSuccess(res));\r\n                console.log(\"Get Schedule===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchScheduleViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchScheduleView;","import {\r\n    FETCH_SCHEDULEVIEW_REQUEST,\r\n    FETCH_SCHEDULEVIEW_SUCCESS,\r\n    FETCH_SCHEDULEVIEW_ERROR\r\n  } from '../constants'\r\n    export const getScheduleByCompanyID = () => {\r\n      return (dispatch, getState) => {\r\n  /*       navigator.geolocation.getCurrentPosition((position) => {\r\n          var lat = parseFloat(position.coords.latitude)\r\n          var long = parseFloat(position.coords.longitude)\r\n    \r\n          var initialRegion = {\r\n            latitude: lat,\r\n            longitude: long,\r\n            latitudeDelta: LATITUDE_DELTA,\r\n            longitudeDelta: LONGITUDE_DELTA,\r\n          }\r\n          dispatch({ type: GET_USER_LOCATION, currentResion: initialRegion });\r\n        },\r\n          (error) => alert(JSON.stringify(error)),\r\n          { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }); */\r\n      };\r\n    };\r\n    \r\n    // action.js\r\n  \r\n  export function fetchScheduleViewRequest() {\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleViewSuccess(scheduleview) {\r\n    console.log(\"action===>\", scheduleview)\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_SUCCESS,\r\n          scheduleview: scheduleview\r\n      }\r\n  }\r\n  \r\n  export function fetchScheduleViewError(error) {\r\n      return {\r\n          type: FETCH_SCHEDULEVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Status from \"../../components/Status/Status\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector,connect } from \"react-redux\";\nimport fetchScheduleView from \"../../services/scheduleview/ScheduleViewService\";\nimport { bindActionCreators } from \"redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\n\nfunction ScheduleViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const scheduleviewData = useSelector(state => state.scheduleview);\n  \n  //Show notification\n  const notify = (message) => toast(message);\n\n  useEffect(() => {\n    console.log(scheduleviewData)\n    props.fetchScheduleView();\n    setDataSource(scheduleviewData.scheduleview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"schedule_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"Full Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"schedule_datetime\",\n      label: \"DateTime\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"predicted_time_spent\",\n      label: \"Predicted Time Spent\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"notes\",\n      label: \"Notes\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"upload_picture\",\n      label: \"Upload\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_in_datetime\",\n      label: \"Check In\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"check_out_datetime\",\n      label: \"Check Out\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"reason\",\n      label: \"Reason\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"isLate\",\n      label: \"Is Late\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Status status={value ? \"yes\" : \"no\"} />\n          );\n        }\n      },\n    },\n    {\n      name: \"exceed_time_limit\",\n      label: \"Exceed Time Limit\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n  \n  \n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    selectableRows: false,\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    \n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Schedules\" data={dataSource} history={history}/>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Schedules\"}\n            data={scheduleviewData.scheduleview}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  scheduleview: state.scheduleview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchScheduleView: fetchScheduleView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduleViewPage);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n  /**\n   * Edit Client\n   */\n  table: {\n    minWidth: 650,\n  },\n  difference: {\n    backgroundColor: theme.palette.success.main,\n    color: 'red!important',\n  },\n  divider: {\n    marginTop: 20,\n    marginBottom: theme.spacing(1),\n  },\n  buttonContainer: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  }\n  //End Client Edit\n}));\n","import { FETCH_CLIENTVIEW_REQUEST, FETCH_CLIENTVIEW_SUCCESS, FETCH_CLIENTVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    clientview: [],\r\n    error: null\r\n}\r\n\r\nexport default function ClientViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_CLIENTVIEW_REQUEST:\r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_CLIENTVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                clientview: action.clientview\r\n            }\r\n        case FETCH_CLIENTVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { fetchClientViewRequest, fetchClientViewSuccess, fetchClientViewError } from \"../../redux/actions/ClientViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport ClientViewReducer from \"../../redux/reducers/ClientViewReducer\";\r\n\r\nfunction fetchClientView() {\r\n    return dispatch => {\r\n        dispatch(fetchClientViewRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getClientByCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchClientViewSuccess(res));\r\n                console.log(\"Get Client===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchClientViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchClientView;","import {\r\n    FETCH_CLIENTVIEW_REQUEST,\r\n    FETCH_CLIENTVIEW_SUCCESS,\r\n    FETCH_CLIENTVIEW_ERROR\r\n  } from '../constants'\r\n    export const getClientView = () => {\r\n      return (dispatch, getState) => {\r\n  /*       navigator.geolocation.getCurrentPosition((position) => {\r\n          var lat = parseFloat(position.coords.latitude)\r\n          var long = parseFloat(position.coords.longitude)\r\n    \r\n          var initialRegion = {\r\n            latitude: lat,\r\n            longitude: long,\r\n            latitudeDelta: LATITUDE_DELTA,\r\n            longitudeDelta: LONGITUDE_DELTA,\r\n          }\r\n          dispatch({ type: GET_USER_LOCATION, currentResion: initialRegion });\r\n        },\r\n          (error) => alert(JSON.stringify(error)),\r\n          { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }); */\r\n      };\r\n    };\r\n    \r\n    // action.js\r\n  \r\n  export function fetchClientViewRequest() {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchClientViewSuccess(clientview) {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_SUCCESS,\r\n          clientview: clientview\r\n      }\r\n  }\r\n  \r\n  export function fetchClientViewError(error) {\r\n      return {\r\n          type: FETCH_CLIENTVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction ClientViewPage(props) {\n  let history = useHistory();\n  const [dataSource, setDataSource] = useState([]);\n  const clientViewData = useSelector(state => state.clientview);\n\n  useEffect(() => {\n    console.log(clientViewData)\n    props.fetchClientView()\n    setDataSource(clientViewData.clientview);\n  }, [])\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  const columns = [\n    {\n      name: \"client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Entity Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_owner_name\",\n      label: \"Owner Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"address\",\n      label: \"Address\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"location\",\n      label: \"Location\",\n      options: {\n        filter: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"phone_number\",\n      label: \"Phone Number\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"company_id\",\n      label: \"Company ID\",\n      options: {\n        filter: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n\n\n  const actionEdit = (e, i) => {\n    history.push(\"/app/clientview/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = clientViewData.client[data.dataIndex].client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n    \n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Clients\" button={[\"Add New\"]} data={dataSource} category=\"clientview\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Clients\"}\n            data={clientViewData.clientview}\n            // data={dataSource}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientViewPage);\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomInput from \"../../components/FormControls/CustomInput\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport { SERVER_URL } from '../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddClient(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n\r\n    //Email Validation\r\n    const validateEmail = (email) => {\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(email) === false) {\r\n            return false;\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        entity_name: '',\r\n        owner_name: \"\",\r\n        address: \"\",\r\n        location: '',\r\n        phone_number: '',\r\n        company_id: localStorage.getItem('company_id')\r\n    })\r\n\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        const { name, value } = e.target;\r\n        setState(prevState => ({\r\n            ...prevState, [field]: value\r\n        }))\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.entity_name == null || state.entity_name == \"\") {\r\n            notify(\"Please enter client entity name.\")\r\n            return\r\n        } else if (state.owner_name == null || state.owner_name == \"\") {\r\n            notify(\"Please enter client owner name.\")\r\n            return\r\n        } else if (state.address == null || state.address == \"\") {\r\n            notify(\"Please enter client address.\")\r\n            return\r\n        } else if (state.location == null || state.location == \"\") {\r\n            notify(\"Please enter client location.\")\r\n            return\r\n        } else if (state.phone_number.length == 0 || state.phone_number.length != 10) {\r\n            notify('Please enter valid phone number')\r\n            return\r\n        } else if (state.company_id.length < 1) {\r\n            notify(\"Please enter company id.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_entity_name: state.entity_name,\r\n                    client_owner_name: state.owner_name,\r\n                    address: state.address,\r\n                    phone_number: state.phone_number,\r\n                    location: state.location,\r\n                    company_id: state.company_id\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/clientview\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\r\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                            \r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomInput title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // company: state.company\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    // fetchCompany: fetchCompany\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddClient);","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditClient(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [dataSource, setDataSource] = useState([]);\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const [state, setState] = useState({\n        id: '',\n        entity_name: '',\n        owner_name: '',\n        address: \"\",\n        location: \"\",\n        phone_number: '',\n        company_id: localStorage.getItem('company_id')\n    })\n\n    const update_id = props.match.params.clientview\n    useEffect(() => {\n        getClientInfo(update_id)\n    }, [])\n\n    const getClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id\n            })\n        };\n        fetch(`${SERVER_URL}getClientProfileById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    entity_name: data.client_entity_name,\n                    owner_name: data.client_owner_name,\n                    address: data.address,\n                    phone_number: data.phone_number,\n                    location: data.location\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const updateClientInfo = (client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                client_id: client_id,\n                client_entity_name: state.entity_name,\n                client_owner_name: state.owner_name,\n                address: state.address,\n                phone_number: state.phone_number,\n                location: state.location,\n                company_id: state.company_id.toString()\n            })\n        };\n        console.log(\"------------------------\", requestOptions.body)\n        fetch(`${SERVER_URL}updateClient`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                console.log(\"Response Data=============>\", data)\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                handleNotificationCall(\"shipped\");\n            })\n            .catch(error => {\n                handleNotificationCall(\"error\");\n                console.error('There was an error!', error);\n            });\n    }\n\n    //input fields event\n    const handleChange = (e, field) => {\n\n        const { name, value } = e.target;\n        setState(prevState => ({\n            ...prevState, [field]: value\n        }))\n    }\n\n    const onSave = () => {\n        if (state.entity_name == null || state.entity_name == \"\") {\n            notify(\"Please enter company entity name.\")\n            return\n        } else if (state.owner_name == null || state.owner_name == \"\") {\n            notify(\"Please enter company owner name.\")\n            return\n        } else if (state.address == null || state.address == \"\") {\n            notify(\"Please enter company address.\")\n            return\n        } else if (state.location == null || state.location == \"\") {\n            notify(\"Please enter company location.\")\n            return\n        } else if (state.phone_number.length != 10) {\n            notify('Please enter valid phone number')\n            return\n        } else if (state.company_id.length < 1) {\n            notify(\"Please enter company id.\")\n            return\n        } else {\n            updateClientInfo(update_id)\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/clientview\");\n    }\n\n    return (\n        <>\n            <PageTitle title=\"Edit Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Entity Name\" value={state.entity_name}\n                                    handleChange={(e) => handleChange(e, 'entity_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Owner Name\" value={state.owner_name} handleChange={(e) => handleChange(e, 'owner_name')} />\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Phone Number\" value={state.phone_number} handleChange={(e) => handleChange(e, 'phone_number')} />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Address\" value={state.address} handleChange={(e) => handleChange(e, 'address')} />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomInput req={true} title=\"Location(For example: -123.1231 -23.3452)\" value={state.location} handleChange={(e) => handleChange(e, 'location')} />\n                            </Grid>\n\n                        </Grid>\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    // company: state.company\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    // fetchCompany: fetchCompany\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditClient);","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  \n    /**\n   * EditBill.js\n   */\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  filePicker: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  fileInput: {\n    width: \"90%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    padding: \"0 10px 0 10px\"\n  },\n  typo: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  buttonContainer: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  //Edit Bill // eslint-disable-next-line\n\n  /**\n   * Show Bill\n   */\n  statusTextContainer: {\n    backgroundColor: theme.palette.mysecondary.light,\n    color: \"#FFF\",\n    padding: theme.spacing(2),\n  },\n  statusText: {\n    // padding: theme.spacing(1),\n  },\n  invoiceContainer: {\n    height: 40,\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(255, 255, 255) 0%, rgb(0, 163, 238) 50%, rgb(11, 26, 45) 100%)',\n  },\n  iconContainer: {\n    borderRadius: 60,\n    background: theme.palette.myprimary.light,\n    width: 120,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    color: '#fff',\n  },\n  cardTitle: {\n    justifyContent: 'flex-end',\n    display: 'flex',\n    color: 'white',\n    fontSize: 16,\n    letterSpacing: 2,\n    fontWeight: 'bold'\n  },\n  cardRoot: {\n    height: 60,\n  },\n  displayColumn: {\n    display: 'flex',\n    flexDirection: 'column',\n    lineHeight: 2\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  rightAlign: {\n    alignItems: 'flex-end',\n  },\n  cardFooterRoot: {\n    padding: 20,\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 10,\n  },\n  editButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark,\n    }\n  },\n  printButton: {\n    backgroundColor: theme.palette.success.main,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark,\n    }\n  },\n  shareButton: {\n    backgroundColor: theme.palette.favorite.white,\n    color: '#666',\n    \"&:hover\": {\n      backgroundColor: '#ccc',\n    }\n  },\n  actionButton: {\n    backgroundColor: theme.palette.myprimary.light,\n    color: '#fff',\n    \"&:hover\": {\n      backgroundColor: theme.palette.myprimary.main,\n    }\n  },\n  //Show Bill End\n\n}));\n","import { fetchSalesClientViewRequest, fetchSalesClientViewSuccess, fetchSalesClientViewError } from \"../../redux/actions/SalesClientViewAction\";\r\nimport { SERVER_URL } from \"../../common/config\";\r\nimport SalesReducer from \"../../redux/reducers/SalesReducer\";\r\n\r\nfunction fetchSalesClientView() {\r\n    return dispatch => {\r\n        dispatch(fetchSalesClientViewRequest());\r\n        let body = {\r\n            company_id: localStorage.getItem('company_id')\r\n        }\r\n        setTimeout(() => {\r\n            fetch(`${SERVER_URL}getSalesClientByCompanyId`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchSalesClientViewSuccess(res));\r\n                console.log(\"Get SalesClientView===>\", res)\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchSalesClientViewError(error));\r\n            })\r\n        }, 1000);\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchSalesClientView;","import {\r\n    FETCH_SALESCLIENTVIEW_REQUEST,\r\n    FETCH_SALESCLIENTVIEW_SUCCESS,\r\n    FETCH_SALESCLIENTVIEW_ERROR\r\n  } from '../constants'\r\n    export const getSalesClientView = () => {\r\n      return (dispatch, getState) => {\r\n  /*       navigator.geolocation.getCurrentPosition((position) => {\r\n          var lat = parseFloat(position.coords.latitude)\r\n          var long = parseFloat(position.coords.longitude)\r\n    \r\n          var initialRegion = {\r\n            latitude: lat,\r\n            longitude: long,\r\n            latitudeDelta: LATITUDE_DELTA,\r\n            longitudeDelta: LONGITUDE_DELTA,\r\n          }\r\n          dispatch({ type: GET_USER_LOCATION, currentResion: initialRegion });\r\n        },\r\n          (error) => alert(JSON.stringify(error)),\r\n          { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }); */\r\n      };\r\n    };\r\n    \r\n    // action.js\r\n  \r\n  export function fetchSalesClientViewRequest() {\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_REQUEST\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientViewSuccess(salesview) {\r\n    console.log(\"action===>\", salesview)\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_SUCCESS,\r\n          salesview: salesview\r\n      }\r\n  }\r\n  \r\n  export function fetchSalesClientViewError(error) {\r\n      return {\r\n          type: FETCH_SALESCLIENTVIEW_ERROR,\r\n          error: error\r\n      }\r\n  }","import React, { useState, useEffect } from \"react\";\nimport { Grid, Toolbar, IconButton, InputBase, Tooltip, FormControlLabel, Switch, Menu, MenuItem, Divider } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport { Edit } from '@material-ui/icons'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { bindActionCreators } from \"redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport fetchSalesClientView from \"../../services/salesview/SalesClientViewService\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { SERVER_URL } from '../../common/config';\n\nfunction SalesViewPage(props) {\n  var classes = useStyles();\n  let history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);   // Table action menu\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\n  const [dataSource, setDataSource] = useState([]);\n  const salesviewData = useSelector(state => state.salesview);\n\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  useEffect(() => {\n    props.fetchSalesClientView()\n    setDataSource(salesviewData.salesview);\n  }, [])\n\n  const columns = [\n    {\n      name: \"sales_client_id\",\n      label: \"ID\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"full_name\",\n      label: \"User Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"client_entity_name\",\n      label: \"Client Name\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"sales_client_id\",\n      label: \"Action\",\n      options: {\n        filter: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          // console.log(\"==================>\", value, tableMeta, updateValue)\n          return (\n            <>\n              <IconButton\n                onClick={(e) => {\n                  actionEdit(e, value)\n                }}\n              >\n                <Edit style={{ fontSize: '18' }} />\n              </IconButton>\n            </>\n          );\n        }\n      },\n    },\n  ];\n\n  /**\n   * Table Action menu event\n   * @param {*} event \n   * @param {*} i \n   */\n\n  const actionEdit = (e, i) => {\n    // console.log(dataSource[selectedRowIndex]);\n    // history.push(\"/app/sales/\" + selectedRowIndex + \"/edit\");\n    // console.log(dataSource[i]);\n    history.push(\"/app/salesview/\" + i + \"/edit\");\n  }\n\n  const options = {\n    filterType: 'dropdown',\n    pagination: true,\n    print: false,\n    download: false,\n    filter: true,\n    responsive: 'scroll',\n    fixedHeader: false, elevation: 0,\n    rowsPerPageOptions: [5, 10, 20],\n    resizableColumns: false,\n    onRowsDelete: (rowsDeleted) => {\n\n      const delete_id = []\n      rowsDeleted.data.map((data) => {\n        const newDeleteId = salesviewData.salesview[data.dataIndex].sales_client_id\n        delete_id.push(newDeleteId)\n      })\n      console.log(\"deleting Ids===> \", delete_id)\n      delete_id.map((id) => {\n        // row delete api call\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            sales_client_id: id\n          })\n        };\n        fetch(`${SERVER_URL}deleteSalesClient`, requestOptions)\n          .then(async response => {\n            const data = await response.json();\n            console.log(\"Response Data=============>\", data)\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n            }\n            return\n          })\n          .catch(error => {\n            notify('Something went wrong!\\n' + error)\n            console.error('There was an error!', error);\n          });\n      })\n    },\n    onTableChange: (action, tableState) => {\n      console.log(action, tableState);\n      let tmp = [];\n      tableState.data.map((item, i) => {\n        tmp.push(item.data);\n      });\n      console.log(tmp);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <PageTitle title=\"Sales Clients\" button={[\"Add New\"]} data={dataSource} category=\"salesview\" history={history} />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={12}>\n          <MUIDataTable\n            title={\"Sales Clients\"}\n            // data={dataSource}\n            data={salesviewData.salesview}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  sales: state.sales\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchSalesClientView: fetchSalesClientView\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SalesViewPage);\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport CustomDatePicker from \"../../components/FormControls/CustomDatePicker\";\nimport CustomInput from \"../../components/FormControls/CustomInput\";\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\nimport * as Icons from \"@material-ui/icons\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport Notification from \"../../components/Notification/Notification\";\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\nimport fetchUserView from \"../../services/users/UserViewService\";\nimport { SERVER_URL } from '../../common/config';\n\nconst positions = [\n    toast.POSITION.TOP_LEFT,\n    toast.POSITION.TOP_CENTER,\n    toast.POSITION.TOP_RIGHT,\n    toast.POSITION.BOTTOM_LEFT,\n    toast.POSITION.BOTTOM_CENTER,\n    toast.POSITION.BOTTOM_RIGHT,\n];\n\nfunction EditSales(props) {\n    var classes = useStyles();\n    let history = useHistory();\n    const [errorToastId, setErrorToastId] = useState(null);\n    var [notificationsPosition, setNotificationPosition] = useState(2);\n    const userData = useSelector(state => state.userview);\n    const clientData = useSelector(state => state.clientview);\n\n    //Show notification\n    const notify = (message) => toast(message);\n\n    // input form datas\n    const update_id = props.match.params.salesview\n    const [state, setState] = useState({\n        sales_client_id: '',\n        client_name: '',\n        user_name: '',\n        client_id: '',\n        user_id: ''\n    })\n\n    useEffect(() => {\n        props.fetchClientView()\n        props.fetchUserView();\n        getSalesClientInfo(update_id)\n    }, [])\n\n    const getSalesClientInfo = (sales_client_id) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                sales_client_id: sales_client_id\n            })\n        };\n        fetch(`${SERVER_URL}getSalesClientById`, requestOptions)\n            .then(async response => {\n                const data = await response.json();\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = (data && data.message) || response.status;\n                    return Promise.reject(error);\n                }\n                setState(() => ({\n                    ...state,\n                    client_name: data.client_entity_name,\n                    user_name: data.full_name,\n                    client_id: data.client_id.toString(),\n                    user_id: data.user_id.toString()\n                }))\n            })\n            .catch(error => {\n                console.error('There was an error!', error);\n            });\n    }\n\n    const getClientNameList = (original) => {\n        console.log('originall ====> ', original, clientData.clientview)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.client_id,\n                        value: item?.client_entity_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const clients = getClientNameList(clientData.clientview)\n\n    console.log(\"Client Data =====> \", clients.map(item => {\n        return item?.value\n    }))\n\n    const getUserNameList = (original) => {\n        console.log('originall ====> ', original, userData.userview)\n        let tmp = [];\n        if (Boolean(original)) {\n            if (original.length) {\n                original.map(item => {\n                    let optionData = {\n                        key: item?.user_id,\n                        value: item?.full_name\n                    }\n                    tmp.push(optionData);\n                })\n                return tmp;\n            }\n            return [];\n        } else {\n            return []\n        }\n    }\n\n    const users = getUserNameList(userData.userview)\n\n    //input fields event\n    const handleUserChange = (e, field) => {\n\n        if (field == \"user_name\") {\n            if (users.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    user_name: e,\n                    user_id: users.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n    const handleClientChange = (e, field) => {\n\n        if (field == \"client_name\") {\n            if (clients.filter(item => item.value == e)[0] != null) {\n                setState({\n                    ...state,\n                    client_name: e,\n                    client_id: clients.filter(item => item.value == e)[0].key\n                })\n            }\n\n        }\n    }\n\n\n    const onSave = () => {\n        if (state.user_name == null || state.user_name == \"\") {\n            notify(\"Please enter company user name.\")\n            return\n        } else if (state.client_name == null || state.client_name == \"\") {\n            notify(\"Please enter client name.\")\n            return\n        } else {\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    sales_client_id: update_id,\n                    client_id: state.client_id,\n                    user_id: state.user_id,\n                })\n            };\n            console.log(\"===============> \", requestOptions.body)\n            fetch(`${SERVER_URL}updateSalesClient`, requestOptions)\n                .then(async response => {\n                    const data = await response.json();\n                    console.log(\"Response Data=============>\", data)\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response status\n                        const error = (data && data.message) || response.status;\n                        return Promise.reject(error);\n                    } else if (data.sales_client_id != null) {\n                        notify(\"This client is already exist.\")\n                        return\n                    } else if (data.id != 0) {\n\n                        handleNotificationCall(\"shipped\");\n                    }\n\n                })\n                .catch(error => {\n                    notify('Something went wrong!\\n' + error)\n                    console.error('There was an error!', error);\n                });\n        }\n    }\n\n    const onCancel = () => {\n        history.push(\"/app/salesview\");\n    }\n\n\n    const userList = users.map(item => {\n        return item?.value\n    })\n\n    const clientList = clients.map(item => {\n        return item?.value\n    })\n\n    return (\n        <>\n            <PageTitle title=\"Edit Sales Client\" />\n            <Grid container spacing={4}>\n                <ToastContainer\n                    className={classes.toastsContainer}\n                    closeButton={\n                        <CloseButton className={classes.notificationCloseButton} />\n                    }\n                    closeOnClick={false}\n                    progressClassName={classes.notificationProgress}\n                />\n                <Grid item xs={12} md={12}>\n                    <Widget title=\"\" disableWidgetMenu>\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\n                                    handleChange={(e) => handleUserChange(e, 'user_name')} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\n                                    handleChange={(e) => handleClientChange(e, 'client_name')} />\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} md={8} lg={8}></Grid>\n                            <Grid item xs={4} md={4} lg={4}>\n                                <Grid container spacing={2} className={classes.buttonContainer}>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Cancel />}\n                                            onClick={() => onCancel()}\n                                        >\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<Icons.Save />}\n                                            onClick={() => onSave()}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Widget>\n                </Grid>\n            </Grid>\n        </>\n    );\n\n    /**\n     * Notification Bar Functions\n     * @param {*} componentProps \n     * @param {*} options \n     */\n    // #############################################################\n    function sendNotification(componentProps, options) {\n        return toast(\n            <Notification\n                {...componentProps}\n                className={classes.notificationComponent}\n            />,\n            options,\n        );\n    }\n\n    function retryErrorNotification() {\n        var componentProps = {\n            type: \"message\",\n            message: \"Message was sent successfully!\",\n            variant: \"contained\",\n            color: \"success\",\n        };\n        toast.update(errorToastId, {\n            render: <Notification {...componentProps} />,\n            type: \"success\",\n        });\n        setErrorToastId(null);\n    }\n\n    function handleNotificationCall(notificationType) {\n        var componentProps;\n\n        if (errorToastId && notificationType === \"error\") return;\n\n        switch (notificationType) {\n            case \"info\":\n                componentProps = {\n                    type: \"feedback\",\n                    message: \"New user feedback received\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                };\n                break;\n            case \"error\":\n                componentProps = {\n                    type: \"message\",\n                    message: \"Message was not sent!\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    extraButton: \"Resend\",\n                    extraButtonClick: retryErrorNotification,\n                };\n                break;\n            default:\n                componentProps = {\n                    type: \"shipped\",\n                    message: \"The item was successfully saved!\",\n                    variant: \"contained\",\n                    color: \"success\",\n                };\n        }\n\n        var toastId = sendNotification(componentProps, {\n            type: notificationType,\n            position: positions[notificationsPosition],\n            progressClassName: classes.progress,\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n            className: classes.notification,\n        });\n\n        if (notificationType === \"error\") setErrorToastId(toastId);\n    }\n\n    function changeNotificationPosition(positionId) {\n        setNotificationPosition(positionId);\n    }\n    // #############################################################\n    function CloseButton({ closeToast, className }) {\n        return <Icons.Close className={className} onClick={closeToast} />;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    userview: state.userview,\n    clientview: state.clientview\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchUserView: fetchUserView,\n    fetchClientView: fetchClientView\n}, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSales);","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Input, IconButton, FormControlLabel, Switch, Divider, Button } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector, connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CustomCombobox from \"../../components/FormControls/CustomCombobox\";\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Notification from \"../../components/Notification/Notification\";\r\nimport fetchClientView from \"../../services/clientview/ClientViewService\";\r\nimport fetchUserView from \"../../services/users/UserViewService\";\r\nimport { SERVER_URL } from '../../common/config';\r\n\r\nconst positions = [\r\n    toast.POSITION.TOP_LEFT,\r\n    toast.POSITION.TOP_CENTER,\r\n    toast.POSITION.TOP_RIGHT,\r\n    toast.POSITION.BOTTOM_LEFT,\r\n    toast.POSITION.BOTTOM_CENTER,\r\n    toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nfunction AddSales(props) {\r\n    var classes = useStyles();\r\n    let history = useHistory();\r\n    const [errorToastId, setErrorToastId] = useState(null);\r\n    var [notificationsPosition, setNotificationPosition] = useState(2);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const userData = useSelector(state => state.userview);\r\n    const clientData = useSelector(state => state.clientview);\r\n\r\n    // input form datas\r\n    const [state, setState] = useState({\r\n        client_name: '',\r\n        user_name: \"\",\r\n        client_id: '',\r\n        user_id: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.fetchClientView()\r\n        props.fetchUserView();\r\n    }, [])\r\n\r\n    //Show notification\r\n    const notify = (message) => toast(message);\r\n    const getClientNameList = (original) => {\r\n        console.log('originall ====> ', original, clientData.clientview)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.client_id,\r\n                        value: item?.client_entity_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const clients = getClientNameList(clientData.clientview)\r\n\r\n    console.log(\"Client Data =====> \", clients.map(item => {\r\n        return item?.value\r\n    }))\r\n\r\n    const getUserNameList = (original) => {\r\n        console.log('originall ====> ', original, userData.userview)\r\n        let tmp = [];\r\n        if (Boolean(original)) {\r\n            if (original.length) {\r\n                original.map(item => {\r\n                    let optionData = {\r\n                        key: item?.user_id,\r\n                        value: item?.full_name\r\n                    }\r\n                    tmp.push(optionData);\r\n                })\r\n                return tmp;\r\n            }\r\n            return [];\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    const users = getUserNameList(userData.userview)\r\n\r\n\r\n    //input fields event\r\n    const handleChange = (e, field) => {\r\n\r\n        if (field == \"user_name\") {\r\n            if(users.filter(item => item.value == e)[0] != null){\r\n                setState({\r\n                ...state,\r\n                user_name: e,\r\n                user_id: users.filter(item => item.value == e)[0].key\r\n            })\r\n            }\r\n            \r\n        } else if (field == \"client_name\") {\r\n            if(clients.filter(item => item.value == e)[0] != null){\r\n                setState({\r\n                ...state,\r\n                client_name: e,\r\n                client_id: clients.filter(item => item.value == e)[0].key\r\n            })\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (state.user_name == null || state.user_name == \"\") {\r\n            notify(\"Please enter company user name.\")\r\n            return\r\n        } else if (state.client_name == null || state.client_name == \"\") {\r\n            notify(\"Please enter client name.\")\r\n            return\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    client_id: state.client_id,\r\n                    user_id: state.user_id,\r\n                })\r\n            };\r\n            fetch(`${SERVER_URL}addSalesClient`, requestOptions)\r\n                .then(async response => {\r\n                    const data = await response.json();\r\n                    console.log(\"Response Data=============>\", data)\r\n                    // check for error response\r\n                    if (!response.ok) {\r\n                        // get error message from body or default to response status\r\n                        const error = (data && data.message) || response.status;\r\n                        return Promise.reject(error);\r\n                    } else if (data.sales_client_id != null) {\r\n                        notify(\"This client is already exist.\")\r\n                        return\r\n                    } else if (data.id != 0) {\r\n\r\n                        handleNotificationCall(\"shipped\");\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    notify('Something went wrong!\\n' + error)\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    const onCancel = () => {\r\n        history.push(\"/app/salesview\");\r\n    }\r\n\r\n    const userList = users.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    const clientList = clients.map(item => {\r\n        return item?.value\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"New Sales Client\" />\r\n            <Grid container spacing={4}>\r\n                <ToastContainer\r\n                    className={classes.toastsContainer}\r\n                    closeButton={\r\n                        <CloseButton className={classes.notificationCloseButton} />\r\n                    }\r\n                    closeOnClick={false}\r\n                    progressClassName={classes.notificationProgress}\r\n                />\r\n                <Grid item xs={12} md={12}>\r\n                    <Widget title=\"\" disableWidgetMenu>\r\n                        <Grid container spacing={1}>\r\n\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"User Name\" items={userList} value={state.user_name}\r\n                                    handleChange={(e) => handleChange(e, 'user_name')} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} className={classes.formContainer}>\r\n                                <CustomCombobox req={true} name=\"Client Name\" items={clientList} value={state.client_name}\r\n                                    handleChange={(e) => handleChange(e, 'client_name')} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8} lg={8}></Grid>\r\n                            <Grid item xs={4} md={4} lg={4}>\r\n                                <Grid container spacing={2} className={classes.buttonContainer}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Cancel />}\r\n                                            onClick={() => onCancel()}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<Icons.Save />}\r\n                                            onClick={() => onSave()}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Notification Bar Functions\r\n     * @param {*} componentProps \r\n     * @param {*} options \r\n     */\r\n    // #############################################################\r\n    function sendNotification(componentProps, options) {\r\n        return toast(\r\n            <Notification\r\n                {...componentProps}\r\n                className={classes.notificationComponent}\r\n            />,\r\n            options,\r\n        );\r\n    }\r\n\r\n    function retryErrorNotification() {\r\n        var componentProps = {\r\n            type: \"message\",\r\n            message: \"Message was sent successfully!\",\r\n            variant: \"contained\",\r\n            color: \"success\",\r\n        };\r\n        toast.update(errorToastId, {\r\n            render: <Notification {...componentProps} />,\r\n            type: \"success\",\r\n        });\r\n        setErrorToastId(null);\r\n    }\r\n\r\n    function handleNotificationCall(notificationType) {\r\n        var componentProps;\r\n\r\n        if (errorToastId && notificationType === \"error\") return;\r\n\r\n        switch (notificationType) {\r\n            case \"info\":\r\n                componentProps = {\r\n                    type: \"feedback\",\r\n                    message: \"New user feedback received\",\r\n                    variant: \"contained\",\r\n                    color: \"primary\",\r\n                };\r\n                break;\r\n            case \"error\":\r\n                componentProps = {\r\n                    type: \"message\",\r\n                    message: \"Message was not sent!\",\r\n                    variant: \"contained\",\r\n                    color: \"secondary\",\r\n                    extraButton: \"Resend\",\r\n                    extraButtonClick: retryErrorNotification,\r\n                };\r\n                break;\r\n            default:\r\n                componentProps = {\r\n                    type: \"shipped\",\r\n                    message: \"The item was successfully saved!\",\r\n                    variant: \"contained\",\r\n                    color: \"success\",\r\n                };\r\n        }\r\n\r\n        var toastId = sendNotification(componentProps, {\r\n            type: notificationType,\r\n            position: positions[notificationsPosition],\r\n            progressClassName: classes.progress,\r\n            onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n            className: classes.notification,\r\n        });\r\n\r\n        if (notificationType === \"error\") setErrorToastId(toastId);\r\n    }\r\n\r\n    function changeNotificationPosition(positionId) {\r\n        setNotificationPosition(positionId);\r\n    }\r\n    // #############################################################\r\n    function CloseButton({ closeToast, className }) {\r\n        return <Icons.Close className={className} onClick={closeToast} />;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userview: state.userview,\r\n    clientview: state.clientview\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    fetchUserView: fetchUserView,\r\n    fetchClientView: fetchClientView\r\n}, dispatch)\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AddSales);","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header/Header\";\nimport Sidebar from \"../Sidebar/Sidebar1\";\n\n// pages\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport { Grid } from \"@material-ui/core\";\nimport Error from \"../../pages/error/Error\";\nimport UserViewPage from \"../../pages/UserView/UserView\";\nimport ScheduleViewPage from \"../../pages/ScheduleView/ScheduleView\";\nimport ClientViewPage from \"../../pages/ClientView/Client\";\nimport AddClientPage from \"../../pages/ClientView/AddClient\";\nimport EditClientPage from \"../../pages/ClientView/EditClient\";\nimport SalesViewPage from \"../../pages/SalesView/Sales\";\nimport EditSalesPage from \"../../pages/SalesView/EditSales\";\nimport AddSalesPage from \"../../pages/SalesView/AddSales\";\nimport Footer from \"../Footer/Footer\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n  const matches1600 = useMediaQuery('(min-width:1600px)');\n  const matches1800 = useMediaQuery('(min-width:1800px)');\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        {/* <Header history={props.history} /> */}\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n\n          })}\n        >\n          <Header history={props.history} />\n          <div className={classnames(classes.mainContainer, {\n            [classes.padding1600]: matches1600,\n            [classes.padding1800]: matches1800,\n          }\n          )}>\n            <Grid>\n              <Switch>\n                \n                <Route exact path=\"/app/userview\" component={UserViewPage} />\n                <Route\n                  exact\n                  path=\"/app\"\n                  render={() => <Redirect to=\"/app/userview\" />}\n                />\n                <Route exact path=\"/app/scheduleview\" component={ScheduleViewPage} />\n                <Route exact path=\"/app/clientview\" component={ClientViewPage} />\n                <Route exact path=\"/app/clientview/add\" component={AddClientPage} />\n                <Route exact path=\"/app/clientview/:clientview/edit\" component={EditClientPage} />\n                <Route exact path=\"/app/salesview\" component={SalesViewPage} />\n                <Route exact path=\"/app/salesview/:salesview/edit\" component={EditSalesPage} />\n                <Route exact path=\"/app/salesview/add\" component={AddSalesPage} />\n                \n                <Route component={Error} />\n              </Switch>\n            </Grid>\n            <Footer />\n          </div>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: \"white\",\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: \"center\",\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"../../assets/images/logo.png\";\n\nexport default function Success() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h4\"\n          color=\"primary\"\n        >\n          Success!\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Your action is done successfully.\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/login\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Go to Login\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n// import background from \"../../assets/images/background.jpg\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotypeContainer: {\n    // backgroundImage: background,\n    backgroundColor: theme.palette.primary.main,\n    width: \"60%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    // width: 165,\n    marginBottom: theme.spacing(4),\n  },\n  logotypeText: {\n    color: \"white\",\n    fontWeight: 500,\n    fontSize: 84,\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: 48,\n    },\n  },\n  formContainer: {\n    width: \"40%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n  },\n  form: {\n    width: 320,\n  },\n  tab: {\n    fontWeight: 400,\n    fontSize: 18,\n  },\n  greeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(4),\n  },\n  subGreeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  googleButton: {\n    marginTop: theme.spacing(6),\n    boxShadow: theme.customShadows.widget,\n    backgroundColor: \"white\",\n    width: \"100%\",\n    textTransform: \"none\",\n  },\n  googleButtonCreating: {\n    marginTop: 0,\n  },\n  googleIcon: {\n    width: 30,\n    marginRight: theme.spacing(2),\n  },\n  creatingButtonContainer: {\n    marginTop: theme.spacing(2.5),\n    height: 46,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  createAccountButton: {\n    height: 46,\n    textTransform: \"none\",\n  },\n  formDividerContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  formDividerWord: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  formDivider: {\n    flexGrow: 1,\n    height: 1,\n    backgroundColor: theme.palette.text.hint + \"40\",\n  },\n  errorMessage: {\n    textAlign: \"center\",\n  },\n  textFieldUnderline: {\n    \"&:before\": {\n      borderBottomColor: theme.palette.primary.light,\n    },\n    \"&:after\": {\n      borderBottomColor: theme.palette.primary.main,\n    },\n    \"&:hover:before\": {\n      borderBottomColor: `${theme.palette.primary.light} !important`,\n    },\n  },\n  textField: {\n    borderBottomColor: theme.palette.background.light,\n  },\n  formButtons: {\n    width: \"100%\",\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  forgetButton: {\n    textTransform: \"none\",\n    fontWeight: 400,\n  },\n  loginLoader: {\n    marginLeft: theme.spacing(4),\n  },\n  copyright: {\n    marginTop: theme.spacing(4),\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n// styles\nimport useStyles from \"./styles\";\n\n// context\nimport { useUserDispatch, loginUser, signUp } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [confirmValue, setConfirmValue] = useState(\"\");\n  var [phoneNumberValue, setPhoneNumberValue] = useState(\"\");\n  var [companyIDValue, setCompanyIDValue] = useState(\"\");\n\n  //Show notification\n  const notify = (message) => toast(message);\n\n  //Email Validation\n  const validateEmail = (email) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (reg.test(email) === false) {\n      return false;\n    } else {\n      return true\n    }\n  }\n\n  //Login\n  const onLogin = () => {\n    if (loginValue.length < 3 || validateEmail(loginValue) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } \n    // else if ( passwordValue.length < 6) {\n    //   notify('Password length should be at least 6 characters.')\n    //   return\n    // } \n    else {\n      loginUser(\n        userDispatch,\n        loginValue,\n        passwordValue,\n        props.history,\n        setIsLoading,\n        setError,\n      )\n    }\n  }\n\n  //Sign up\n  const onSignup = () => {\n    if (nameValue < 0) {\n      notify(\"Please enter name\");\n      return\n    } else if (loginValue.length < 3 || validateEmail(loginValue) == false) {\n      notify(\"Please enter valid email.\");\n      return\n    } else if (phoneNumberValue.length != 10 ) {\n      notify(\"Please enter valid phone number.\")\n      return\n    } else if (companyIDValue.length < 1 ) {\n      notify(\"Please enter company id.\")\n      return\n    } else if ( passwordValue.length < 6) {\n      notify('Password length should be at least 6 characters.')\n      return\n    } else if ( confirmValue.length < 6) {\n      notify('Please confirm password')\n      return\n    } else if ( passwordValue != confirmValue) {\n      notify('Password is not match.')\n      return\n    } else {\n      signUp(\n        userDispatch,\n        nameValue,\n        passwordValue,\n        loginValue,\n        phoneNumberValue,\n        companyIDValue,\n        true,\n        false,\n        props.history,\n        setIsLoading,\n        setError,\n      )\n    }\n  }\n\n  return (\n    <Grid container className={classes.container}>\n      <ToastContainer />\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                Welcome to ASILE!\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                    <Button\n                      disabled={\n                        loginValue.length === 0 || passwordValue.length === 0\n                      }\n                      onClick={onLogin}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                    >\n                      Login\n                    </Button>\n                  )}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h3\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h4\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  \n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"phone_number\"\n                margin=\"normal\"\n                placeholder=\"Phone Number\"\n                type=\"number\"\n                onChange={e => setPhoneNumberValue(e.target.value)}\n                fullWidth\n              />\n              <TextField\n                id=\"company_id\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={companyIDValue}\n                onChange={e => setCompanyIDValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Company ID\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <TextField\n                id=\"confirm\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={confirmValue}\n                onChange={e => setConfirmValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                    <Button\n                      onClick={onSignup}\n                      disabled={\n                        loginValue.length === 0 ||\n                        passwordValue.length === 0 ||\n                        nameValue.length === 0\n                      }\n                      size=\"large\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      fullWidth\n                      className={classes.createAccountButton}\n                    >\n                      Create your account\n                    </Button>\n                  )}\n              </div>\n\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2020 Asile. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// components\nimport Layout from \"./Layout/Layout\";\nimport Layout1 from \"./Layout/Layout1\";\n\n// pages\nimport Error from \"../pages/error\";\nimport Success from \"../pages/success/success\"\nimport Login from \"../pages/login\";\n\n// context\nimport { useUserState, UserProvider } from \"../context/UserContext\";\n\nexport default function App() {\n  // global\n  var { isAuthenticated, adminID } = useUserState();\n  console.log('auth ================> ', isAuthenticated)\n  console.log('auth ================> ', adminID)\n  return (\n    <HashRouter>\n      <Switch>\n        {/* if (isAuthenticated == 1) {\n          <Route exact path=\"/\" render={() => <Redirect to=\"/app\" />} />\n        } else if (isAuthenticated == 2) {\n          <Route exact path=\"/\" render={() => <Redirect to=\"/app1\" />} />\n        } */}\n\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app\" />} />\n        <PrivateRoute path=\"/app\" component={(adminID == 1) ? Layout : Layout1} />\n        {/* <PrivateRoute path=\"/app1\" component={Layout1} /> */}\n        <PublicRoute path=\"/login\" component={Login} />\n        <PublicRoute path=\"/success\" component={Success} />\n        <Route component={Error} />\n      </Switch>\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n  function PrivateRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            React.createElement(component, props)\n          ) : (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n                  state: {\n                    from: props.location,\n                  },\n                }}\n              />\n            )\n        }\n      />\n    );\n  }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/\",\n              }}\n            />\n          ) : (\n              React.createElement(component, props)\n            )\n        }\n      />\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const data = [\r\n  [\"1\", \"Joe James\", \"p1\", \"joe@gmail.com\", \"123456\", 11, 1, 0],\r\n  [\"2\", \"Aho Seha\", \"p2\", \"aho@gmail.com\", \"123456\", 22, 0, 1],\r\n  [\"3\", \"Dea Hone\", \"p3\", \"dea@gmail.com\", \"123456\", 33, 0, 2],\r\n  [\"4\", \"Slevon Wikon\", \"p4\", \"slevon@gmail.com\", \"123456\", 44, 1, 3],\r\n];\r\n","import {data} from \"../fake-datas/UserData\"\r\nimport { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    user: [],\r\n    error: null\r\n}\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_USER_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USER_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                user: action.user\r\n            }\r\n        case FETCH_USER_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_COMPANY_REQUEST, FETCH_COMPANY_SUCCESS, FETCH_COMPANY_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    company: [],\r\n    error: null\r\n}\r\n\r\nexport default function CompanyReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_COMPANY_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_COMPANY_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                company: action.company\r\n            }\r\n        case FETCH_COMPANY_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","export const data = [\r\n  [\"1\", \"Joe James\",  \"joe@gmail.com\", \"123456\"],\r\n  [\"2\", \"Aho Seha\",  \"aho@gmail.com\", \"123456\"],\r\n  [\"3\", \"Dea Hone\", \"dea@gmail.com\", \"123456\"],\r\n  [\"4\", \"Slevon Wikon\", \"slevon@gmail.com\", \"123456\"],\r\n];\r\n","import {data} from \"../fake-datas/UserViewData\"\r\nimport { FETCH_USERVIEW_REQUEST, FETCH_USERVIEW_SUCCESS, FETCH_USERVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    userview: [],\r\n    error: null\r\n}\r\n\r\nexport default function UserViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_USERVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USERVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // userview: [...data]\r\n                userview: action.userview\r\n            }\r\n        case FETCH_USERVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: 'error'\r\n                // error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_SALESCLIENTVIEW_REQUEST, FETCH_SALESCLIENTVIEW_SUCCESS, FETCH_SALESCLIENTVIEW_ERROR } from \"../constants\"\r\nconst initialState = {\r\n    loading: false,\r\n    salesview: [],\r\n    error: null\r\n}\r\n\r\nexport default function SalesClientViewReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_SALESCLIENTVIEW_REQUEST: \r\n            console.log('fetch request ...')\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_SALESCLIENTVIEW_SUCCESS:\r\n            console.log('fetch success ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                // user: [...data]\r\n                salesview: action.salesview\r\n            }\r\n        case FETCH_SALESCLIENTVIEW_ERROR:\r\n            console.log('fetch error ...')\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport AdminReducer from './AdminReducer';\r\nimport UserReducer from './UserReducer';\r\nimport CompanyReducer from './CompanyReducer';\r\nimport ClientReducer from './ClientReducer';\r\nimport ClientViewReducer from './ClientViewReducer';\r\nimport SalesReducer from './SalesReducer';\r\nimport ScheduleReducer from './ScheduleReducer'\r\nimport UserViewReducer from './UserViewReducer'\r\nimport ScheduleViewReducer from './ScheduleViewReducer'\r\nimport SalesViewReducer from './SalesViewReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    //Super Admin Reducer\r\n    admin: AdminReducer,\r\n    user: UserReducer, \r\n    company: CompanyReducer, \r\n    client: ClientReducer,\r\n    sales: SalesReducer,\r\n    schedule: ScheduleReducer,\r\n    //Admin Reducer\r\n    userview: UserViewReducer,\r\n    clientview: ClientViewReducer,\r\n    scheduleview: ScheduleViewReducer,\r\n    salesview: SalesViewReducer,\r\n})\r\n\r\nexport default rootReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Themes from \"./themes\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { LayoutProvider } from \"./context/LayoutContext\";\nimport { UserProvider } from \"./context/UserContext\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from 'redux-thunk'\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\n// pick a date util library\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst store = createStore(rootReducer,\n  applyMiddleware(\n    thunkMiddleware,\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <LayoutProvider>\n      <UserProvider>  \n        <ThemeProvider theme={Themes.default}>\n          <CssBaseline />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <App />\n          </MuiPickersUtilsProvider>\n        </ThemeProvider>\n      </UserProvider>\n    </LayoutProvider>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}